{"version":3,"file":"ozp-iwc-owf7-widget-adapter.min.js","sources":["app/js/shindig/util.js","app/js/shindig/json.js","app/js/shindig/rpc.js","app/js/shindig/overrides.js","app/js/adapter/owf7Participant.js","app/js/adapter/owf7ParticipantListener.js"],"names":["gadgets","util","parseUrlParams","query","l","document","location","href","queryIdx","indexOf","hashIdx","substr","join","split","unescapeEntity","match","value","String","fromCharCode","init","config","features","parameters","onLoadHandlers","escapeCodePoints",10,13,34,39,60,62,92,8232,8233,"register","getUrlParameters","pairs","unesc","window","decodeURIComponent","unescape","i","j","length","pos","argName","substring","replace","makeClosure","scope","callback","baseArgs","arguments","push","tmpArgs","slice","apply","makeEnum","values","v","obj","getFeatureParameters","feature","hasFeature","registerOnLoadHandler","runOnLoadHandlers","escape","input","opt_escapeObjects","escapeString","newObject","field","hasOwnProperty","str","ch","shouldEscape","out","charCodeAt","charAt","unescapeString","json","f","n","Date","prototype","toJSON","this","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","stringify","JSON","parse","text","test","eval","rpc","getRelayChannel","postMessage","ActiveXObject","navigator","product","setupChannel","relayChannel","onmessage","packet","msg","data","e","process","addEventListener","attachEvent","NIX_GET_WRAPPER","NIX_HANDLE_MESSAGE","NIX_CREATE_CHANNEL","name","channel","token","authToken","nix_channels","vbscript","NIX_WRAPPER","execScript","getId","windowName","id","setupFrame","frameId","setup","frame","getElementById","FE_G2C_CHANNEL","args","wrapper","contentWindow","opener","encodeLegacyData","argsEscaped","encodeURIComponent","s","a","Array","t","Error","c","result","call","CALLBACK_NAME","services","DEFAULT_NAME","callNix","targetId","serviceName","from","rpcData","handler","GetAuthToken","CreateChannel","SendMessage","callIfpc","callFrameElement","callArgs","fe","frameElement","FE_C2G_CHANNEL","relay","getRelayUrl","src","queueOut","useLegacyProtocol","callId","concat","useMultiPartMessages","part","message","payloadLength","URL_LIMIT","numPackets","Math","ceil","packetIdx","emitInvisibleIframe","shift","isInPopup","_childWindows","isMessageComplete","arr","total","_childWindowMessageId","_childWindowMessageQueue","target","iframe","iframePool","ifr","recyclable","readyState","parentNode","removeChild","splice","createElement","style","border","width","height","visibility","position","onload","setTimeout","body","appendChild","getTargetWin","sameDomain","parent","ii","childWindow","callSameDomain","fn","targetEl","receiveSameDomain","parentRelayUrl","relayUrl","param","params","search","parentParam","callbacks","rpctoken","ifpctok","messagesIn","callbackId","_getChildWindowMessage","msgId","q","m","requiredConfig","NonEmptyStringValidator","unregister","registerDefault","unregisterDefault","channelType","targetWin","targetDoc","setRelayUrl","url","opt_useLegacy","useMultiPartMessagesForIFPC","setAuthToken","receive","fragment","parseInt","payload","completed","ozpIwc","Owf7Participant","listener","client","guid","instanceId","rpcId","widgetGuid","inDrag","lastMouseMove","now","widgetQuery","launchData","self","mouseMoveDelay","launchDataResource","send","dst","resource","action","response","done","entity","undefined","externalInit","initIframe","widgetParams","webContextPath","preferenceLocation","prefsUrl","rpcRelay","layout","containerVersion","owf","lang","currentTheme","themeName","themeContrast","themeFontSize","version","locked","subscriptions","setAttribute","listWidgetChannel","pubsubChannel","rpcChannel","onContainerInit","sender","random","initMessage","idString","jsonString","registerDragAndDrop","registerWidgetListing","onPublish","command","onSubscribe","newValue","onUnsubscribe","onLaunchWidget","contentType","reply","error","newWidgetLaunched","uniqueId","unregisterWidgetListing","widgetListing","console","log","onListWidgets","widgets","widgetCount","resp","convertToLocalCoordinates","rv","element","pageX","offsetLeft","scrollLeft","clientLeft","pageY","offsetTop","scrollTop","clientTop","offsetParent","inIframeBounds","clientWidth","clientHeight","onFakeMouseMoveFromClient","deltaT","onFakeMouseUpFromClient","onFakeMouseMoveFromOthers","lastPosition","localizedEvent","mouseOver","onFakeMouseUpFromOthers","hookPublish_dragOutName","hookPublish_dropReceiveData","hookReceive_dragSendData","hookReceive_dragOutName","hookReceive_dropReceiveData","hookReceive_dragStart","hookPublish_dragStart","hookReceive_dragStopInContainer","hookReceive_dragStopInWidget","hookPublish_dragSendData","hookPublish_dragStopInWidget","absolutePath","link","protocol","host","pathname","hash","Owf7ParticipantListener","owf7PrefsUrl","participants","widgetReadyMap","magicFunctionMap","proxyMap","InternalParticipant","defaultRouter","registerParticipant","installDragAndDrop","registerDefaults","xOffset","screenX","outerWidth","yOffset","screenY","outerHeight","makeGuid","S4","toString","updateMouseCoordinates","clientX","clientY","k","addWidget","cfg","hashObj","newHash","widgetRegistrations","registerFunctions","participantConfig","cancelDrag","updateMouse","evt","buttons","rpcString","getRPCFunctions","getParticipant","p","getParticipant_err","regObj","regFn","recurseIfObject","components","keys","_widget_iframe_ready","widget","_WIDGET_LAUNCHER_CHANNEL","dd","_fake_mouse_move","_fake_mouse_up","_fake_mouse_out","eventing","container_init","after_container_init","pubsub","dest","intents","_intents","_intents_receive","kernel","_getWidgetReady","widgetId","_widgetReady","register_functions","iframeId","functions","widgetID","found","len","len2","GET_FUNCTIONS","sourceWidgetId","LIST_WIDGETS","launcher","Ozone.log"],"mappings":"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","sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar gadgets = gadgets || {};\n\n/**\n * @fileoverview General purpose utilities that gadgets can use.\n */\n\n/**\n * @static\n * @class Provides general-purpose utility functions.\n * @name gadgets.util\n */\n\ngadgets.util = function() {\n  /**\n   * Parses URL parameters into an object.\n   * @return {Array.&lt;String&gt;} The parameters\n   */\n  function parseUrlParams() {\n    // Get settings from url, 'hash' takes precedence over 'search' component\n    // don't use document.location.hash due to browser differences.\n    var query;\n    var l = document.location.href;\n    var queryIdx = l.indexOf(\"?\");\n    var hashIdx = l.indexOf(\"#\");\n    if (hashIdx === -1) {\n      query = l.substr(queryIdx + 1);\n    } else {\n      // essentially replaces \"#\" with \"&\"\n      query = [l.substr(queryIdx + 1, hashIdx - queryIdx - 1), \"&\",\n               l.substr(hashIdx + 1)].join(\"\");\n    }\n    return query.split(\"&\");\n  }\n\n  var parameters = null;\n  var features = {};\n  var onLoadHandlers = [];\n\n  // Maps code points to the value to replace them with.\n  // If the value is \"false\", the character is removed entirely, otherwise\n  // it will be replaced with an html entity.\n  var escapeCodePoints = {\n   // nul; most browsers truncate because they use c strings under the covers.\n   0 : false,\n   // new line\n   10 : true,\n   // carriage return\n   13 : true,\n   // double quote\n   34 : true,\n   // single quote\n   39 : true,\n   // less than\n   60 : true,\n   // greater than\n   62 : true,\n   // Backslash\n   92 : true,\n   // line separator\n   8232 : true,\n   // paragraph separator\n   8233 : true\n  };\n\n  /**\n   * Regular expression callback that returns strings from unicode code points.\n   *\n   * @param {Array} match Ignored\n   * @param {String} value The codepoint value to convert\n   * @return {String} The character corresponding to value.\n   */\n  function unescapeEntity(match, value) {\n    return String.fromCharCode(value);\n  }\n\n  /**\n   * Initializes feature parameters.\n   */\n  function init(config) {\n    features = config[\"core.util\"] || {};\n  }\n  if (gadgets.config) {\n    gadgets.config.register(\"core.util\", null, init);\n  }\n\n  return /** @scope gadgets.util */ {\n\n    /**\n     * Gets the URL parameters.\n     *\n     * @return {Object} Parameters passed into the query string\n     * @member gadgets.util\n     * @private Implementation detail.\n     */\n    getUrlParameters : function () {\n      if (parameters !== null) {\n        return parameters;\n      }\n      parameters = {};\n      var pairs = parseUrlParams();\n      var unesc = window.decodeURIComponent ? decodeURIComponent : unescape;\n      for (var i = 0, j = pairs.length; i < j; ++i) {\n        var pos = pairs[i].indexOf('=');\n        if (pos === -1) {\n          continue;\n        }\n        var argName = pairs[i].substring(0, pos);\n        var value = pairs[i].substring(pos + 1);\n        // difference to IG_Prefs, is that args doesn't replace spaces in\n        // argname. Unclear on if it should do:\n        // argname = argname.replace(/\\+/g, \" \");\n        value = value.replace(/\\+/g, \" \");\n        parameters[argName] = unesc(value);\n      }\n      return parameters;\n    },\n\n    /**\n     * Creates a closure that is suitable for passing as a callback.\n     * Any number of arguments\n     * may be passed to the callback;\n     * they will be received in the order they are passed in.\n     *\n     * @param {Object} scope The execution scope; may be null if there is no\n     *     need to associate a specific instance of an object with this\n     *     callback\n     * @param {Function} callback The callback to invoke when this is run;\n     *     any arguments passed in will be passed after your initial arguments\n     * @param {Object} var_args Initial arguments to be passed to the callback\n     *\n     * @member gadgets.util\n     * @private Implementation detail.\n     */\n    makeClosure : function (scope, callback, var_args) {\n      // arguments isn't a real array, so we copy it into one.\n      var baseArgs = [];\n      for (var i = 2, j = arguments.length; i < j; ++i) {\n       baseArgs.push(arguments[i]);\n      }\n      return function() {\n        // append new arguments.\n        var tmpArgs = baseArgs.slice();\n        for (var i = 0, j = arguments.length; i < j; ++i) {\n          tmpArgs.push(arguments[i]);\n        }\n        return callback.apply(scope, tmpArgs);\n      };\n    },\n\n    /**\n     * Utility function for generating an \"enum\" from an array.\n     *\n     * @param {Array.<String>} values The values to generate.\n     * @return {Map&lt;String,String&gt;} An object with member fields to handle\n     *   the enum.\n     *\n     * @private Implementation detail.\n     */\n    makeEnum : function (values) {\n      var obj = {};\n      for (var i = 0, v; v = values[i]; ++i) {\n        obj[v] = v;\n      }\n      return obj;\n    },\n\n    /**\n     * Gets the feature parameters.\n     *\n     * @param {String} feature The feature to get parameters for\n     * @return {Object} The parameters for the given feature, or null\n     *\n     * @member gadgets.util\n     */\n    getFeatureParameters : function (feature) {\n      return typeof features[feature] === \"undefined\"\n          ? null : features[feature];\n    },\n\n    /**\n     * Returns whether the current feature is supported.\n     *\n     * @param {String} feature The feature to test for\n     * @return {Boolean} True if the feature is supported\n     *\n     * @member gadgets.util\n     */\n    hasFeature : function (feature) {\n      return typeof features[feature] !== \"undefined\";\n    },\n\n    /**\n     * Registers an onload handler.\n     * @param {Function} callback The handler to run\n     *\n     * @member gadgets.util\n     */\n    registerOnLoadHandler : function (callback) {\n      onLoadHandlers.push(callback);\n    },\n\n    /**\n     * Runs all functions registered via registerOnLoadHandler.\n     * @private Only to be used by the container, not gadgets.\n     */\n    runOnLoadHandlers : function () {\n      for (var i = 0, j = onLoadHandlers.length; i < j; ++i) {\n        onLoadHandlers[i]();\n      }\n    },\n\n    /**\n     * Escapes the input using html entities to make it safer.\n     *\n     * If the input is a string, uses gadgets.util.escapeString.\n     * If it is an array, calls escape on each of the array elements\n     * if it is an object, will only escape all the mapped keys and values if\n     * the opt_escapeObjects flag is set. This operation involves creating an\n     * entirely new object so only set the flag when the input is a simple\n     * string to string map.\n     * Otherwise, does not attempt to modify the input.\n     *\n     * @param {Object} input The object to escape\n     * @param {Boolean} opt_escapeObjects Whether to escape objects.\n     * @return {Object} The escaped object\n     * @private Only to be used by the container, not gadgets.\n     */\n    escape : function(input, opt_escapeObjects) {\n      if (!input) {\n        return input;\n      } else if (typeof input === \"string\") {\n        return gadgets.util.escapeString(input);\n      } else if (typeof input === \"array\") {\n        for (var i = 0, j = input.length; i < j; ++i) {\n          input[i] = gadgets.util.escape(input[i]);\n        }\n      } else if (typeof input === \"object\" && opt_escapeObjects) {\n        var newObject = {};\n        for (var field in input) if (input.hasOwnProperty(field)) {\n          newObject[gadgets.util.escapeString(field)]\n              = gadgets.util.escape(input[field], true);\n        }\n        return newObject;\n      }\n      return input;\n    },\n\n    /**\n     * Escapes the input using html entities to make it safer.\n     *\n     * Currently not in the spec -- future proposals may change\n     * how this is handled.\n     *\n     * TODO: Parsing the string would probably be more accurate and faster than\n     * a bunch of regular expressions.\n     *\n     * @param {String} str The string to escape\n     * @return {String} The escaped string\n     */\n    escapeString : function(str) {\n      var out = [], ch, shouldEscape;\n      for (var i = 0, j = str.length; i < j; ++i) {\n        ch = str.charCodeAt(i);\n        shouldEscape = escapeCodePoints[ch];\n        if (shouldEscape === true) {\n          out.push(\"&#\", ch, \";\");\n        } else if (shouldEscape !== false) {\n          // undefined or null are OK.\n          out.push(str.charAt(i));\n        }\n      }\n      return out.join(\"\");\n    },\n\n    /**\n     * Reverses escapeString\n     *\n     * @param {String} str The string to unescape.\n     */\n    unescapeString : function(str) {\n      return str.replace(/&#([0-9]+);/g, unescapeEntity);\n    }\n  };\n}();\n// Initialize url parameters so that hash data is pulled in before it can be\n// altered by a click.\ngadgets.util.getUrlParameters();\n\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/**\n * @fileoverview\n * The global object gadgets.json contains two methods.\n *\n * gadgets.json.stringify(value) takes a JavaScript value and produces a JSON\n * text. The value must not be cyclical.\n *\n * gadgets.json.parse(text) takes a JSON text and produces a JavaScript value.\n * It will return false if there is an error.\n*/\n\nvar gadgets = gadgets || {};\n\n/**\n * @static\n * @class Provides operations for translating objects to and from JSON.\n * @name gadgets.json\n */\n\n/**\n * Port of the public domain JSON library by Douglas Crockford.\n * See: http://www.json.org/json2.js\n */\ngadgets.json = function () {\n\n  /**\n   * Formats integers to 2 digits.\n   * @param {Number} n\n   */\n  function f(n) {\n    return n < 10 ? '0' + n : n;\n  }\n\n  Date.prototype.toJSON = function () {\n    return [this.getUTCFullYear(), '-',\n           f(this.getUTCMonth() + 1), '-',\n           f(this.getUTCDate()), 'T',\n           f(this.getUTCHours()), ':',\n           f(this.getUTCMinutes()), ':',\n           f(this.getUTCSeconds()), 'Z'].join(\"\");\n  };\n\n  return {\n    stringify: function(value) {\n        return JSON.stringify(value);\n    },\n    parse: function (text) {\n// Parsing happens in three stages. In the first stage, we run the text against\n// regular expressions that look for non-JSON patterns. We are especially\n// concerned with '()' and 'new' because they can cause invocation, and '='\n// because it can cause mutation. But just to be safe, we want to reject all\n// unexpected forms.\n\n// We split the first stage into 4 regexp operations in order to work around\n// crippling inefficiencies in IE's and Safari's regexp engines. First we\n// replace all backslash pairs with '@' (a non-JSON character). Second, we\n// replace all simple value tokens with ']' characters. Third, we delete all\n// open brackets that follow a colon or comma or that begin the text. Finally,\n// we look to see that the remaining characters are only whitespace or ']' or\n// ',' or ':' or '{' or '}'. If that is so, then the text is safe for eval.\n      if (typeof(text)===\"string\" && /^[\\],:{}\\s]*$/.test(text.replace(/\\\\[\"\\\\\\/b-u]/g, '@').\n          replace(/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g, ']').\n          replace(/(?:^|:|,)(?:\\s*\\[)+/g, ''))) {\n        return eval('(' + text + ')');\n      }\n      // If the text is not JSON parseable, then return false.\n\n      return false;\n    }\n  };\n}();\n\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements. See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership. The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations under the License.\n */\n\n/**\n * @fileoverview Remote procedure call library for gadget-to-container,\n * container-to-gadget, and gadget-to-gadget (thru container) communication.\n */\n\nvar gadgets = gadgets || {};\n\n/**\n * @static\n * @class Provides operations for making rpc calls.\n * @name gadgets.rpc\n */\ngadgets.rpc = function() {\n  //alert(\"Initing gadgets.rpc\");\n  // General constants.\n  var CALLBACK_NAME = '__cb';\n  var DEFAULT_NAME = '';\n\n  // Consts for FrameElement.\n  var FE_G2C_CHANNEL = '__g2c_rpc';\n  var FE_C2G_CHANNEL = '__c2g_rpc';\n\n  // Consts for NIX. VBScript doesn't\n  // allow items to start with _ for some reason,\n  // so we need to make these names quite unique, as\n  // they will go into the global namespace.\n  var NIX_WRAPPER = 'GRPC____NIXVBS_wrapper';\n  var NIX_GET_WRAPPER = 'GRPC____NIXVBS_get_wrapper';\n  var NIX_HANDLE_MESSAGE = 'GRPC____NIXVBS_handle_message';\n  var NIX_CREATE_CHANNEL = 'GRPC____NIXVBS_create_channel';\n\n  // JavaScript reference to the NIX VBScript wrappers.\n  // Gadgets will have but a single channel under\n  // nix_channels['..'] while containers will have a channel\n  // per gadget stored under the gadget's ID.\n  var nix_channels = {};\n\n  var services = {};\n  var iframePool = [];\n  var relayUrl = {};\n  var useLegacyProtocol = {};\n  var authToken = {};\n  var callId = 0;\n  var callbacks = {};\n  var setup = {};\n  var sameDomain = {};\n  var params = {};\n\n  // Load the authentication token for speaking to the container\n  // from the gadget's parameters, or default to '0' if not found.\n  if (gadgets.util) {\n    params = gadgets.util.getUrlParameters();\n\t//alert(\"gadget params: \" + params);\n  }\n\n  authToken['..'] = params.rpctoken || params.ifpctok || 0;\n\n  //ifpc mods\n  var URL_LIMIT = 2000;\n  var messagesIn = {};\n  var useMultiPartMessages = {};\n  //ifpc mods\n\n\n  /*\n   * Return a short code representing the best available cross-domain\n   * message transport available to the browser.\n   *\n   * + For those browsers that support native messaging (various implementations\n   *   of the HTML5 postMessage method), use that. Officially defined at\n   *   http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html.\n   *\n   *   postMessage is a native implementation of XDC. A page registers that\n   *   it would like to receive messages by listening the the \"message\" event\n   *   on the window (document in DPM) object. In turn, another page can\n   *   raise that event by calling window.postMessage (document.postMessage\n   *   in DPM) with a string representing the message and a string\n   *   indicating on which domain the receiving page must be to receive\n   *   the message. The target page will then have its \"message\" event raised\n   *   if the domain matches and can, in turn, check the origin of the message\n   *   and process the data contained within.\n   *\n   *     wpm: postMessage on the window object.\n   *        - Internet Explorer 8+\n   *        - Safari (latest nightlies as of 26/6/2008)\n   *        - Firefox 3+\n   *        - Opera 9+\n   *\n   *     dpm: postMessage on the document object.\n   *        - Opera 8+\n   *\n   * + For Internet Explorer before version 8, the security model allows anyone\n   *   parent to set the value of the \"opener\" property on another window,\n   *   with only the receiving window able to read it.\n   *   This method is dubbed \"Native IE XDC\" (NIX).\n   *\n   *   This method works by placing a handler object in the \"opener\" property\n   *   of a gadget when the container sets up the authentication information\n   *   for that gadget (by calling setAuthToken(...)). At that point, a NIX\n   *   wrapper is created and placed into the gadget by calling\n   *   theframe.contentWindow.opener = wrapper. Note that as a result, NIX can\n   *   only be used by a container to call a particular gadget *after* that\n   *   gadget has called the container at least once via NIX.\n   *\n   *   The NIX wrappers in this RPC implementation are instances of a VBScript\n   *   class that is created when this implementation loads. The reason for\n   *   using a VBScript class stems from the fact that any object can be passed\n   *   into the opener property.\n   *   While this is a good thing, as it lets us pass functions and setup a true\n   *   bidirectional channel via callbacks, it opens a potential security hole\n   *   by which the other page can get ahold of the \"window\" or \"document\"\n   *   objects in the parent page and in turn wreak havok. This is due to the\n   *   fact that any JS object useful for establishing such a bidirectional\n   *   channel (such as a function) can be used to access a function\n   *   (eg. obj.toString, or a function itself) created in a specific context,\n   *   in particular the global context of the sender. Suppose container\n   *   domain C passes object obj to gadget on domain G. Then the gadget can\n   *   access C's global context using:\n   *   var parentWindow = (new obj.toString.constructor(\"return window;\"))();\n   *   Nulling out all of obj's properties doesn't fix this, since IE helpfully\n   *   restores them to their original values if you do something like:\n   *   delete obj.toString; delete obj.toString;\n   *   Thus, we wrap the necessary functions and information inside a VBScript\n   *   object. VBScript objects in IE, like DOM objects, are in fact COM\n   *   wrappers when used in JavaScript, so we can safely pass them around\n   *   without worrying about a breach of context while at the same time\n   *   allowing them to act as a pass-through mechanism for information\n   *   and function calls. The implementation details of this VBScript wrapper\n   *   can be found in the setupChannel() method below.\n   *\n   *     nix: Internet Explorer-specific window.opener trick.\n   *       - Internet Explorer 6\n   *       - Internet Explorer 7\n   *\n   * + For Gecko-based browsers, the security model allows a child to call a\n   *   function on the frameElement of the iframe, even if the child is in\n   *   a different domain. This method is dubbed \"frameElement\" (fe).\n   *\n   *   The ability to add and call such functions on the frameElement allows\n   *   a bidirectional channel to be setup via the adding of simple function\n   *   references on the frameElement object itself. In this implementation,\n   *   when the container sets up the authentication information for that gadget\n   *   (by calling setAuth(...)) it as well adds a special function on the\n   *   gadget's iframe. This function can then be used by the gadget to send\n   *   messages to the container. In turn, when the gadget tries to send a\n   *   message, it checks to see if this function has its own function stored\n   *   that can be used by the container to call the gadget. If not, the\n   *   function is created and subsequently used by the container.\n   *   Note that as a result, FE can only be used by a container to call a\n   *   particular gadget *after* that gadget has called the container at\n   *   least once via FE.\n   *\n   *     fe: Gecko-specific frameElement trick.\n   *        - Firefox 1+\n   *\n   * + For all others, we have a fallback mechanism known as \"ifpc\". IFPC\n   *   exploits the fact that while same-origin policy prohibits a frame from\n   *   accessing members on a window not in the same domain, that frame can,\n   *   however, navigate the window heirarchy (via parent). This is exploited by\n   *   having a page on domain A that wants to talk to domain B create an iframe\n   *   on domain B pointing to a special relay file and with a message encoded\n   *   after the hash (#). This relay, in turn, finds the page on domain B, and\n   *   can call a receipt function with the message given to it. The relay URL\n   *   used by each caller is set via the gadgets.rpc.setRelayUrl(..) and\n   *   *must* be called before the call method is used.\n   *\n   *     ifpc: Iframe-based method, utilizing a relay page, to send a message.\n   */\n  function getRelayChannel() {\n//    return 'ifpc';\n    return typeof window.postMessage === 'function' ? 'wpm' :\n           typeof window.postMessage === 'object' ? 'wpm':\n           typeof document.postMessage === 'function' ? 'dpm' :\n           window.ActiveXObject ? 'nix' :\n           navigator.product === 'Gecko' ? 'fe' :\n           'ifpc';\n  }\n\n  /**\n   * Conducts any initial global work necessary to setup the\n   * channel type chosen.\n   */\n  function setupChannel() {\n    // If the channel type is one of the native\n    // postMessage based ones, setup the handler to receive\n    // messages.\n    if (relayChannel === 'dpm' || relayChannel === 'wpm') {\n      var onmessage = function (packet) {\n        // TODO validate packet.domain for security reasons\n        var msg=null;\n        try{\n            msg=gadgets.json.parse(packet.data);\n        } catch(e) {\n            // assume it was message from some other system and fall through\n        }\n        if(msg) {\n            process(msg);\n        }\n      }\n\n      if (typeof window.addEventListener != 'undefined') {\n        window.addEventListener('message', onmessage, false);\n      } else if (typeof window.attachEvent != 'undefined') {\n        window.attachEvent('onmessage', onmessage);\n      }\n\n    }\n\n    // If the channel type is NIX, we need to ensure the\n    // VBScript wrapper code is in the page and that the\n    // global Javascript handlers have been set.\n    if (relayChannel === 'nix') {\n\n       //alert('nix setup!');\n\n      // VBScript methods return a type of 'unknown' when\n      // checked via the typeof operator in IE. Fortunately\n      // for us, this only applies to COM objects, so we\n      // won't see this for a real Javascript object.\n      if (typeof window[NIX_GET_WRAPPER] !== 'unknown') {\n        window[NIX_HANDLE_MESSAGE] = function(data) {\n          process(gadgets.json.parse(data));\n        };\n\n        window[NIX_CREATE_CHANNEL] = function(name, channel, token) {\n          // Verify the authentication token of the gadget trying\n          // to create a channel for us.\n          if (authToken[name] == token) {\n            nix_channels[name] = channel;\n          }\n        };\n\n        // Inject the VBScript code needed.\n        var vbscript =\n          // We create a class to act as a wrapper for\n          // a Javascript call, to prevent a break in of\n          // the context.\n          'Class ' + NIX_WRAPPER + '\\n '\n\n          // An internal member for keeping track of the\n          // name of the document (container or gadget)\n          // for which this wrapper is intended. For\n          // those wrappers created by gadgets, this is not\n          // used (although it is set to \"..\")\n          + 'Private m_Intended\\n'\n\n          // Stores the auth token used to communicate with\n          // the gadget. The GetChannelCreator method returns\n          // an object that returns this auth token. Upon matching\n          // that with its own, the gadget uses the object\n          // to actually establish the communication channel.\n          + 'Private m_Auth\\n'\n\n          // Method for internally setting the value\n          // of the m_Intended property.\n          + 'Public Sub SetIntendedName(name)\\n '\n          + 'If isEmpty(m_Intended) Then\\n'\n          + 'm_Intended = name\\n'\n          + 'End If\\n'\n          + 'End Sub\\n'\n\n          // Method for internally setting the value of the m_Auth property.\n          + 'Public Sub SetAuth(auth)\\n '\n          + 'If isEmpty(m_Auth) Then\\n'\n          + 'm_Auth = auth\\n'\n          + 'End If\\n'\n          + 'End Sub\\n'\n\n          // A wrapper method which actually causes a\n          // message to be sent to the other context.\n          + 'Public Sub SendMessage(data)\\n '\n          + NIX_HANDLE_MESSAGE + '(data)\\n'\n          + 'End Sub\\n'\n\n          // Returns the auth token to the gadget, so it can\n          // confirm a match before initiating the connection\n          + 'Public Function GetAuthToken()\\n '\n          + 'GetAuthToken = m_Auth\\n'\n          + 'End Function\\n'\n\n          // Method for setting up the container->gadget\n          // channel. Not strictly needed in the gadget's\n          // wrapper, but no reason to get rid of it. Note here\n          // that we pass the intended name to the NIX_CREATE_CHANNEL\n          // method so that it can save the channel in the proper place\n          // *and* verify the channel via the authentication token passed\n          // here.\n          + 'Public Sub CreateChannel(channel, auth)\\n '\n          + 'Call ' + NIX_CREATE_CHANNEL + '(m_Intended, channel, auth)\\n'\n          + 'End Sub\\n'\n          + 'End Class\\n'\n\n          // Function to get a reference to the wrapper.\n          + 'Function ' + NIX_GET_WRAPPER + '(name, auth)\\n'\n          + 'Dim wrap\\n'\n          + 'Set wrap = New ' + NIX_WRAPPER + '\\n'\n          + 'wrap.SetIntendedName name\\n'\n          + 'wrap.SetAuth auth\\n'\n          + 'Set ' + NIX_GET_WRAPPER + ' = wrap\\n'\n          + 'End Function';\n\n        try {\n          //alert('execScript! '+vbscript);\n          window.execScript(vbscript, 'vbscript');\n        } catch (e) {\n\n          //alert('exception! back to ifpc');\n          // Fall through to IFPC.\n          relayChannel = 'ifpc';\n        }\n      }\n    }\n  }\n\n  //Store the parsed window.name configuration, if necessary\n  var config = null;\n\n  //Parse the window.name configuration and cache it.  Handle the case\n  //where containers use a JSON string in the window name and a plain string,\n//  function getConfig() {\n//    if (config == null) {\n//        config = {};\n//        if (window.name.charAt(0) != '{') {\n//            config.rpcId = window.name;\n//            config.kernel = true;\n//        } else {\n//            config = gadgets.json.parse(window.name);\n//            config.rpcId = config.id;\n//            return config;\n//        }\n//    } else {\n//        return config;\n//    }\n//  }\n\n  //Get the IFrame ID from the window.name property.  Handle three cases\n  //1. OWF Webtop, which assumes IFrame IDs are identical to window names\n  //2. OWF Kernel, which assumes that IFrame IDs are contianed in the window name as JSON as the id field\n  //3. Others, which use a plain string in the window name and assume the IFrame id is also this plain string\n//  function getId(windowName) {\n//    var conf = getConfig();\n//    if (conf.kernel)\n//        return conf.rpcId;\n//    else\n//        return windowName;\n//  }\n\n  function getId(windowName) {\n    if (windowName.charAt(0) != '{') {\n      return windowName\n    }\n    else {\n      var obj = gadgets.json.parse(windowName);\n      var id = obj.id;\n      return gadgets.json.stringify({id:obj.id});\n    }\n  }\n\n  // Pick the most efficient RPC relay mechanism\n  var relayChannel = getRelayChannel();\n  //alert('relaychannel is '+relayChannel);\n\n  // Conduct any setup necessary for the chosen channel.\n  setupChannel();\n\n  // Create the Default RPC handler.\n  services[DEFAULT_NAME] = function() {\n    //suppress this error - no one should ever try to use a service that wasn't registered using our api\n    //throw new Error('Unknown RPC service: ' + this.s);\n  };\n\n  // Create a Special RPC handler for callbacks.\n  services[CALLBACK_NAME] = function(callbackId, result) {\n    var callback = callbacks[callbackId];\n    if (callback) {\n      delete callbacks[callbackId];\n      callback(result);\n    }\n  };\n\n  /**\n   * Conducts any frame-specific work necessary to setup\n   * the channel type chosen. This method is called when\n   * the container page first registers the gadget in the\n   * RPC mechanism. Gadgets, in turn, will complete the setup\n   * of the channel once they send their first messages.\n   */\n  function setupFrame(frameId, token) {\n    if (setup[frameId]) {\n      return;\n    }\n\n    if (relayChannel === 'fe') {\n      try {\n        var frame = document.getElementById(frameId);\n        frame[FE_G2C_CHANNEL] = function(args) {\n          process(gadgets.json.parse(args));\n        };\n      } catch (e) {\n        // Something went wrong. System will fallback to\n        // IFPC.\n      }\n    }\n\n    if (relayChannel === 'nix') {\n      try {\n        var frame = document.getElementById(frameId);\n        var wrapper = window[NIX_GET_WRAPPER](frameId, token);\n        frame.contentWindow.opener = wrapper;\n      } catch (e) {\n        // Something went wrong. System will fallback to\n        // IFPC.\n        //alert('setupFrame Error!:'+e.message);\n\n      }\n    }\n\n    setup[frameId] = true;\n  }\n\n  /**\n   * Encodes arguments for the legacy IFPC wire format.\n   *\n   * @param {Object} args\n   * @return {String} the encoded args\n   */\n  function encodeLegacyData(args) {\n    var stringify = gadgets.json.stringify;\n    var argsEscaped = [];\n    for(var i = 0, j = args.length; i < j; ++i) {\n      argsEscaped.push(encodeURIComponent(stringify(args[i])));\n    }\n    return argsEscaped.join('&');\n  }\n\n  /**\n   * Helper function to process an RPC request\n   * @param {Object} rpc RPC request object\n   * @private\n   */\n    function process(rpc) {\n    //\n    // RPC object contents:\n    //   s: Service Name\n    //   f: From\n    //   c: The callback ID or 0 if none.\n    //   a: The arguments for this RPC call.\n    //   t: The authentication token.\n    //\n    if (rpc && typeof rpc.s === 'string' && typeof rpc.f === 'string' &&\n        rpc.a instanceof Array) {\n\n      //ensure id is compatible\n      rpc.f = getId(rpc.f);\n\n      // Validate auth token.\n      if (authToken[rpc.f]) {\n        // We allow type coercion here because all the url params are strings.\n        if (authToken[rpc.f] != rpc.t) {\n          throw new Error(\"Invalid auth token.\");\n        }\n      }\n\n      // If there is a callback for this service, attach a callback function\n      // to the rpc context object for asynchronous rpc services.\n      //\n      // Synchronous rpc request handlers should simply ignore it and return a\n      // value as usual.\n      // Asynchronous rpc request handlers, on the other hand, should pass its\n      // result to this callback function and not return a value on exit.\n      //\n      // For example, the following rpc handler passes the first parameter back\n      // to its rpc client with a one-second delay.\n      //\n      // function asyncRpcHandler(param) {\n      //   var me = this;\n      //   setTimeout(function() {\n      //     me.callback(param);\n      //   }, 1000);\n      // }\n      if (rpc.c) {\n        rpc.callback = function(result) {\n          gadgets.rpc.call(rpc.f, CALLBACK_NAME, null, rpc.c, result);\n        };\n      }\n\n      // Call the requested RPC service.\n      var result = (services[rpc.s] ||\n                    services[DEFAULT_NAME]).apply(rpc, rpc.a);\n\n      // If the rpc request handler returns a value, immediately pass it back\n      // to the callback. Otherwise, do nothing, assuming that the rpc handler\n      // will make an asynchronous call later.\n      if (rpc.c && typeof result != 'undefined') {\n        gadgets.rpc.call(rpc.f, CALLBACK_NAME, null, rpc.c, result);\n      }\n    }\n  }\n\n  /**\n   * Attempts to conduct an RPC call to the specified\n   * target with the specified data via the NIX\n   * method. If this method fails, the system attempts again\n   * using the known default of IFPC.\n   *\n   * @param {String} targetId Module Id of the RPC service provider.\n   * @param {String} serviceName Name of the service to call.\n   * @param {String} from Module Id of the calling provider.\n   * @param {Object} rpcData The RPC data for this call.\n   */\n  function callNix(targetId, serviceName, from, rpcData) {\n    try {\n//       alert('try nix targetId='+targetId);\n//       alert('try nix from='+from);\n      if (from != '..') {\n//        alert('try nix1');\n        // Call from gadget to the container.\n        var handler = nix_channels['..'];\n\n//        alert('Nix handler='+handler);\n        //alert('GetAuthToken'+(\"GetAuthToken\" in window.opener));\n//        alert('window.opener='+window.opener);\n\n        // If the gadget has yet to retrieve a reference to\n        // the NIX handler, try to do so now. We don't do a\n        // typeof(window.opener.GetAuthToken) check here\n        // because it means accessing that field on the COM object, which,\n        // being an internal function reference, is not allowed.\n        // \"in\" works because it merely checks for the prescence of\n        // the key, rather than actually accessing the object's property.\n        // This is just a sanity check, not a validity check.\n        if (!handler && window.opener && \"GetAuthToken\" in window.opener) {\n//          alert('try nix - handler');\n          handler = window.opener;\n\n          // Create the channel to the parent/container.\n          // First verify that it knows our auth token to ensure it's not\n          // an impostor.\n          if (handler.GetAuthToken() == authToken['..']) {\n            // Auth match - pass it back along with our wrapper to finish.\n            // own wrapper and our authentication token for co-verification.\n            var token = authToken['..'];\n            handler.CreateChannel(window[NIX_GET_WRAPPER]('..', token),\n                                  token);\n            // Set channel handler\n            nix_channels['..'] = handler;\n            window.opener = null;\n          }\n        }\n\n        // If we have a handler, call it.\n        if (handler) {\n          //alert('sent nix');\n          handler.SendMessage(rpcData);\n          return;\n        }\n\n//        alert('Nix did not send3');\n      } else {\n        // Call from container to a gadget[targetId].\n//        alert('try nix2 - nix_channels[targetId]='+nix_channels[targetId]);\n\n        // If we have a handler, call it.\n        if (nix_channels[targetId]) {\n//          alert('sent nix');\n          nix_channels[targetId].SendMessage(rpcData);\n          return;\n        }\n\n//        alert('Nix did not send1');\n      }\n\n//      alert('Nix did not send2');\n\n    } catch (e) {\n//      alert('Nix Failed!:'+e);\n    }\n\n//    alert('fallback ifpc');\n\n    // If we have reached this point, something has failed\n    // with the NIX method, so we default to using\n    // IFPC for this call.\n    callIfpc(targetId, serviceName, from, rpcData);\n  }\n\n  /**\n   * Attempts to conduct an RPC call to the specified\n   * target with the specified data via the FrameElement\n   * method. If this method fails, the system attempts again\n   * using the known default of IFPC.\n   *\n   * @param {String} targetId Module Id of the RPC service provider.\n   * @param {String} serviceName Service name to call.\n   * @param {String} from Module Id of the calling provider.\n   * @param {Object} rpcData The RPC data for this call.\n   * @param {Array.<Object>} callArgs Original arguments to call()\n   */\n  function callFrameElement(targetId, serviceName, from, rpcData, callArgs) {\n    //alert('callFrameElement!');\n    try {\n      if (from != '..') {\n        // Call from gadget to the container.\n        var fe = window.frameElement;\n\n        if (typeof fe[FE_G2C_CHANNEL] === 'function') {\n          // Complete the setup of the FE channel if need be.\n          if (typeof fe[FE_G2C_CHANNEL][FE_C2G_CHANNEL] !== 'function') {\n            fe[FE_G2C_CHANNEL][FE_C2G_CHANNEL] = function(args) {\n              process(gadgets.json.parse(args));\n            };\n          }\n\n          // Conduct the RPC call.\n          fe[FE_G2C_CHANNEL](rpcData);\n          return;\n        }\n      } else {\n        // Call from container to gadget[targetId].\n        var frame = document.getElementById(targetId);\n\n        if (typeof frame[FE_G2C_CHANNEL] === 'function' &&\n            typeof frame[FE_G2C_CHANNEL][FE_C2G_CHANNEL] === 'function') {\n\n          // Conduct the RPC call.\n          frame[FE_G2C_CHANNEL][FE_C2G_CHANNEL](rpcData);\n          return;\n        }\n      }\n    } catch (e) {\n    }\n\n    // If we have reached this point, something has failed\n    // with the FrameElement method, so we default to using\n    // IFPC for this call.\n    callIfpc(targetId, serviceName, from, rpcData, callArgs);\n  }\n\n  /**\n   * Conducts an RPC call to the specified\n   * target with the specified data via the IFPC\n   * method.\n   *\n   * @param {String} targetId Module Id of the RPC service provider.\n   * @param {String} serviceName Service name to call.\n   * @param {String} from Module Id of the calling provider.\n   * @param {Object} rpcData The RPC data for this call.\n   * @param {Array.<Object>} callArgs Original arguments to call()\n   */\n  function callIfpc(targetId, serviceName, from, rpcData, callArgs) {\n    //alert(\"CONTAINER IFPC params: \" + targetId + \" \" + serviceName + \" \" + from + \" \" + rpcData + \" \" + callArgs);\n    // Retrieve the relay file used by IFPC. Note that\n    // this must be set before the call, and so we conduct\n    // an extra check to ensure it is not blank.\n    var relay = gadgets.rpc.getRelayUrl(targetId);\n\n    if (!relay) {\n      throw new Error('No relay file assigned for IFPC');\n    }\n\n    // The RPC mechanism supports two formats for IFPC (legacy and current).\n    var src = null,\n        queueOut = [];\n    if (useLegacyProtocol[targetId]) {\n      // Format: #iframe_id&callId&num_packets&packet_num&block_of_data\n      src = [relay, '#', encodeLegacyData([from, callId, 1, 0,\n             encodeLegacyData([from, serviceName, '', '', from].concat(\n               callArgs))])].join('');\n      queueOut.push(src);\n    } else {\n\n      // Format: #targetId & sourceId@callId & packetNum & packetId & packetData\n      src = [relay, '#', encodeURIComponent(targetId), '&', from, '@', callId, '&'].join('');\n      if (!useMultiPartMessages[targetId]) {\n        // Format: #targetId & sourceId@callId & packetNum & packetId & packetData\n        queueOut.push([src, 1, '&', 0, '&', , encodeURIComponent(rpcData)].join(''));\n\n      }\n      else {\n        var message = encodeURIComponent(rpcData),\n            payloadLength = URL_LIMIT - src.length,\n            numPackets = Math.ceil(message.length / payloadLength),\n            packetIdx = 0,\n            part;\n        while (message.length > 0) {\n          part = message.substring(0, payloadLength);\n          message = message.substring(payloadLength);\n          queueOut.push([src, numPackets, '&', packetIdx, '&', part].join(''));\n          packetIdx += 1;\n        }\n\n      }\n\n    }\n\n    // Conduct the IFPC call by creating the Iframe with\n    // the relay URL and appended message.\n    do {\n      emitInvisibleIframe(queueOut.shift(),targetId);\n    } while (queueOut.length > 0);\n    return true;\n\n\n  }\n\n  //IE only: return true if a target iframe id is in a child popup window\n  function isInPopup(targetId) {\n    if (!targetId) {\n      return false;\n    }\n    if (targetId == \"..\") {\n      return false;\n    }\n    var frame = document.getElementById(targetId);\n    if (frame) {\n      return false;\n    }\n    if (typeof _childWindows === 'undefined') {\n      return false;\n    }\n    return true;\n  }\n\n  //IE only: Queue of messages for child windows\n  window._childWindowMessageQueue = [];\n  //IE only: Unique increasing ID for all messages put on the child window queue\n  window._childWindowMessageId = 0;\n  //IE only: Allow a child window to retrieve a message from the queue\n  window._getChildWindowMessage = function(msgId) {\n    var q = _childWindowMessageQueue;\n    for(var ii=0; ii < q.length; ii++) {\n      var m = q[ii];\n      if (m.id == msgId) {\n        return m;\n      }\n    }\n  }\n\n  function isMessageComplete(arr, total) {\n    for (var i = total - 1; i >= 0; --i) {\n      if (typeof arr[i] === 'undefined') {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Helper function to emit an invisible IFrame.\n   * @param {String} src SRC attribute of the IFrame to emit.\n   * @private\n   */\n  function emitInvisibleIframe(src, targetId) {\n    if (isInPopup(targetId)) {\n        //IE only:\n        //Queue the message for our child iframes, which will poll for them.\n        //We do this because in IE a parent window does not have access to the\n        //document of child popup windows, and hence cannot emit an iframe\n        //within them\n        var id = window._childWindowMessageId;\n        id++;\n        window._childWindowMessageQueue.push({id:id, target:targetId, src:src});\n        window._childWindowMessageId++;\n        if(window._childWindowMessageQueue.length > 20) {\n          window._childWindowMessageQueue.shift();\n        }\n        return;\n    }\n    var iframe;\n    // Recycle IFrames\n    for (var i = iframePool.length - 1; i >=0; --i) {\n      var ifr = iframePool[i];\n      try {\n        if (ifr && (ifr.recyclable || ifr.readyState === 'complete')) {\n          ifr.parentNode.removeChild(ifr);\n          if (window.ActiveXObject) {\n            // For MSIE, delete any iframes that are no longer being used. MSIE\n            // cannot reuse the IFRAME because a navigational click sound will\n            // be triggered when we set the SRC attribute.\n            // Other browsers scan the pool for a free iframe to reuse.\n            iframePool[i] = ifr = null;\n            iframePool.splice(i, 1);\n          } else {\n            ifr.recyclable = false;\n            iframe = ifr;\n            break;\n          }\n        }\n      } catch (e) {\n        // Ignore; IE7 throws an exception when trying to read readyState and\n        // readyState isn't set.\n      }\n    }\n    // Create IFrame if necessary\n    if (!iframe) {\n      iframe = document.createElement('iframe');\n      iframe.style.border = iframe.style.width = iframe.style.height = '0px';\n      iframe.style.visibility = 'hidden';\n      iframe.style.position = 'absolute';\n      iframe.onload = function() { this.recyclable = true; };\n      iframePool.push(iframe);\n    }\n    iframe.src = src;\n    setTimeout(function() { document.body.appendChild(iframe); }, 0);\n  }\n\n    //Find a target IFrame or window based off an RPC ID, allowing for\n    //the fact that child popup windows with IFrames might exist.\n    function getTargetWin(id) {\n      if (typeof id === \"undefined\" || id === \"..\") {\n          // Chrome 30 throws SecurityError when accessing opener property on window.parent\n          try {\n            //Check to see if we are an iframe in a child window, and if so use the opener\n            if(sameDomain[id] !== false && window.parent.opener) {\n                return window.parent.opener.parent;\n            }\n          }\n          catch(e) {}\n          //Normal case, we are an IFrame in a page\n          return window.parent;\n      }\n\n      //At this point we are a container looking for a child iframe\n\n      // Cast to a String to avoid an index lookup.\n      id = String(id);\n\n      var target = null;\n\n      // Try window.frames first\n      //apparently in FF using window.frames will return a bogus window object if the\n      //iframe was removed and re-added to the document so it's always better to just do\n      //a dom lookup\n//      target = window.frames[id];\n//      if (target) {\n//          return target;\n//      }\n\n      // Fall back to getElementById()\n      target = document.getElementById(id);\n      if (target && target.contentWindow) {\n        return target.contentWindow;\n      }\n\n      // At this point we have missed on searching for child iframes\n      // in the main browser window, so search popup windows\n      // This assumes the container is keeping a list of child\n      // windows in the global _childWindows array\n      if (typeof _childWindows !== 'undefined') {\n          for(var ii=0; ii<_childWindows.length;ii++) {\n              var childWindow = _childWindows[ii];\n              try {\n                  //In IE 8, this will throw an exception.\n                  if (childWindow.document) {\n                      target = childWindow.document.getElementById(id);\n                  }\n              } catch(e) {\n                  //BUG. Don't know how to support\n                  //direct WMP calls from parent to child popups\n                  //in IE 8.\n              }\n              if (target && target.contentWindow) {\n                return target.contentWindow;\n              }\n          }\n      }\n      return null;\n    }\n\n\n  /**\n   * Attempts to make an rpc by calling the target's receive method directly.\n   * This works when gadgets are rendered on the same domain as their container,\n   * a potentially useful optimization for trusted content which keeps\n   * RPC behind a consistent interface.\n   * @param {String} target Module id of the rpc service provider\n   * @param {String} from Module id of the caller (this)\n   * @param {String} callbackId Id of the call\n   * @param {String} rpcData JSON-encoded RPC payload\n   * @return\n   */\n  function callSameDomain(target, rpc) {\n    var fn;\n\n    if (sameDomain[target] !== false) {\n      // Seed with a negative, typed value to avoid\n      // hitting this code path repeatedly\n      var targetEl = getTargetWin(target);\n\n      try {\n        // If this succeeds, then same-domain policy applied\n//        sameDomain[target] = targetEl.gadgets.rpc.receiveSameDomain;\n        fn = targetEl.gadgets.rpc.receiveSameDomain;\n      } catch (e) {\n        // Usual case: different domains\n      }\n    }\n\n    if (typeof fn === 'function') {\n      // Call target's receive method\n      fn(rpc);\n      sameDomain[target] = true;\n      return true;\n    }\n    else\n        sameDomain[target] = false;\n\n    return false;\n  }\n\n  // gadgets.config might not be available, such as when serving container js.\n  if (gadgets.config) {\n    /**\n     * Initializes RPC from the provided configuration.\n     */\n    function init(config) {\n\t  //alert(\"CONTAINER Config: \" + config);\n      // Allow for wild card parent relay files as long as it's from a\n      // white listed domain. This is enforced by the rendering servlet.\n      if (config.rpc.parentRelayUrl.substring(0, 7) === 'http://') {\n        relayUrl['..'] = config.rpc.parentRelayUrl;\n      } else {\n        // It's a relative path, and we must append to the parent.\n        // We're relying on the server validating the parent parameter in this\n        // case. Because of this, parent may only be passed in the query, not\n        // the fragment.\n        var params = document.location.search.substring(0).split(\"&\");\n\t\t//alert(\"Init Config method - Setting Params: \" + params);\n        var parentParam = \"\";\n        for (var i = 0, param; param = params[i]; ++i) {\n          // Only the first parent can be validated.\n          if (param.indexOf(\"parent=\") === 0) {\n            parentParam = decodeURIComponent(param.substring(7));\n            break;\n          }\n        }\n        relayUrl['..'] = parentParam + config.rpc.parentRelayUrl;\n      }\n      useLegacyProtocol['..'] = !!config.rpc.useLegacyProtocol;\n    }\n\n    var requiredConfig = {\n      parentRelayUrl : gadgets.config.NonEmptyStringValidator\n    };\n    gadgets.config.register(\"rpc\", requiredConfig, init);\n  }\n\n  return /** @scope gadgets.rpc */ {\n    /**\n     * Registers an RPC service.\n     * @param {String} serviceName Service name to register.\n     * @param {Function} handler Service handler.\n     *\n     * @member gadgets.rpc\n     */\n    register: function(serviceName, handler) {\n\t//alert(\"CONTAINER REGISTER VARIABLES: \" + serviceName + \" -|- \" + handler);\n      if (serviceName == CALLBACK_NAME) {\n        throw new Error(\"Cannot overwrite callback service\");\n      }\n\n      if (serviceName == DEFAULT_NAME) {\n        throw new Error(\"Cannot overwrite default service:\"\n                        + \" use registerDefault\");\n      }\n\t  services[serviceName] = handler;\n    },\n\n    /**\n     * Unregisters an RPC service.\n     * @param {String} serviceName Service name to unregister.\n     *\n     * @member gadgets.rpc\n     */\n    unregister: function(serviceName) {\n      if (serviceName == CALLBACK_NAME) {\n        throw new Error(\"Cannot delete callback service\");\n      }\n\n      if (serviceName == DEFAULT_NAME) {\n        throw new Error(\"Cannot delete default service:\"\n                        + \" use unregisterDefault\");\n      }\n\n      delete services[serviceName];\n    },\n\n    /**\n     * Registers a default service handler to processes all unknown\n     * RPC calls which raise an exception by default.\n     * @param {Function} handler Service handler.\n     *\n     * @member gadgets.rpc\n     */\n    registerDefault: function(handler) {\n      services[''] = handler;\n    },\n\n    /**\n     * Unregisters the default service handler. Future unknown RPC\n     * calls will fail silently.\n     *\n     * @member gadgets.rpc\n     */\n    unregisterDefault: function() {\n      delete services[''];\n    },\n\n    /**\n     * Calls an RPC service.\n     * @param {String} targetId Module Id of the RPC service provider.\n     *                          Empty if calling the parent container.\n     * @param {String} serviceName Service name to call.\n     * @param {Function|null} callback Callback function (if any) to process\n     *                                 the return value of the RPC request.\n     * @param {*} var_args Parameters for the RPC request.\n     *\n     * @member gadgets.rpc\n     */\n    call: function(targetId, serviceName, callback, var_args) {\n      ++callId;\n\t  targetId = getId(targetId) || '..';\n      if (callback) {\n        callbacks[callId] = callback;\n      }\n\n      // Default to the container calling.\n      var from = '..';\n\n      if (targetId === '..') {\n//        from = window.name;\n        from = getId(window.name);\n      }\n\n      // Not used by legacy, create it anyway...\n      var rpc = {\n        s: serviceName,\n        f: from,\n        c: callback ? callId : 0,\n        a: Array.prototype.slice.call(arguments, 3),\n        t: authToken[targetId]\n      };\n\n      // If target is on the same domain, call method directly\n      if (callSameDomain(targetId, rpc)) {\n        return;\n      }\n\n      var rpcData = gadgets.json.stringify(rpc);\n\n      var channelType = relayChannel;\n\n      // If we are told to use the legacy format, then we must\n      // default to IFPC.\n      if (useLegacyProtocol[targetId]) {\n        channelType = 'ifpc';\n      }\n\n      //alert('channelType:'+channelType);\n      switch (channelType) {\n        case 'dpm': // use document.postMessage.\n          // Get the window from the document. Fixes a bug with postMessage\n          // calls on a target that had been removed then appended to the document object\n            var targetWin = getTargetWin(targetId);\n            var targetDoc = targetWin.document;\n\n          if (targetDoc != null)\n            try {\n              targetDoc.postMessage(rpcData);\n            } catch (e) {\n              callIfpc(targetId, serviceName, from, rpcData, rpc.a);\n            }\n          break;\n\n        case 'wpm': // use window.postMessage.\n          // Get the window from the document. Fixes a bug with postMessage\n          // calls on a target that had been removed then appended to the document object\n            var targetWin = getTargetWin(targetId);\n\n          if (targetWin != null) {\n            try {\n              targetWin.postMessage(rpcData, \"*\");//relayUrl[targetId]);\n            } catch (e) {\n              callIfpc(targetId, serviceName, from, rpcData, rpc.a);\n            }\n          }\n          break;\n\n        case 'nix': // use NIX.\n          //alert('callNix!');\n          callNix(targetId, serviceName, from, rpcData);\n          break;\n\n        case 'fe': // use FrameElement.\n          callFrameElement(targetId, serviceName, from, rpcData, rpc.a);\n          break;\n\n        default: // use 'ifpc' as a fallback mechanism.\n          callIfpc(targetId, serviceName, from, rpcData, rpc.a);\n          break;\n      }\n    },\n\n    /**\n     * Gets the relay URL of a target frame.\n     * @param {String} targetId Name of the target frame.\n     * @return {String|undefined} Relay URL of the target frame.\n     *\n     * @member gadgets.rpc\n     */\n    getRelayUrl: function(targetId) {\n      return relayUrl[targetId];\n    },\n\n    /**\n     * Sets the relay URL of a target frame.\n     * @param {String} targetId Name of the target frame.\n     * @param {String} url Full relay URL of the target frame.\n     * @param {Boolean} opt_useLegacy True if this relay needs the legacy IFPC\n     *     wire format.\n     *\n     * @member gadgets.rpc\n     */\n    setRelayUrl: function(targetId, url, opt_useLegacy, useMultiPartMessagesForIFPC) {\n      relayUrl[targetId] = url;\n      useLegacyProtocol[targetId] = !!opt_useLegacy;\n      useMultiPartMessages[targetId] = !!useMultiPartMessagesForIFPC;\n    },\n\n    /**\n     * Sets the auth token of a target frame.\n     * @param {String} targetId Name of the target frame.\n     * @param {String} token The authentication token to use for all\n     *     calls to or from this target id.\n     *\n     * @member gadgets.rpc\n     */\n    setAuthToken: function(targetId, token) {\n      authToken[targetId] = token;\n      setupFrame(targetId, token);\n    },\n\n    /**\n     * Gets the RPC relay mechanism.\n     * @return {String} RPC relay mechanism. See above for\n     *   a list of supported types.\n     *\n     * @member gadgets.rpc\n     */\n    getRelayChannel: function() {\n      return relayChannel;\n    },\n\n    /**\n     * Receives and processes an RPC request. (Not to be used directly.)\n     * @param {Array.<String>} fragment An RPC request fragment encoded as\n     *        an array. The first 4 elements are target id, source id & call id,\n     *        total packet number, packet id. The last element stores the actual\n     *        JSON-encoded and URI escaped packet data.\n     *\n     * @member gadgets.rpc\n     */\n    receive: function(fragment) {\n      if (fragment.length > 4) {\n//        // TODO parse fragment[1..3] to merge multi-fragment messages\n//        process(gadgets.json.parse(\n//            decodeURIComponent(fragment[fragment.length - 1])));\n\n        var from = fragment[1],   // in the form of \"<from>@<callid>\"\n            numPackets = parseInt(fragment[2], 10),\n            packetIdx = parseInt(fragment[3], 10),\n            payload = fragment[fragment.length - 1],\n            completed = numPackets === 1;\n\n        // if message is multi-part, store parts in the proper order\n        if (numPackets > 1) {\n          if (!messagesIn[from]) {\n            messagesIn[from] = [];\n          }\n          messagesIn[from][packetIdx] = payload;\n          // check if all parts have been sent\n          if (isMessageComplete(messagesIn[from], numPackets)) {\n            payload = messagesIn[from].join('');\n            delete messagesIn[from];\n            completed = true;\n          }\n        }\n\n        // complete message sent\n        if (completed) {\n          process(gadgets.json.parse(decodeURIComponent(payload)));\n        }\n      }\n    },\n\n    /**\n     * Receives and processes an RPC request sent via the same domain.\n     * (Not to be used directly). Converts the inbound rpc object's\n     * Array into a local Array to pass the process() Array test.\n     * @param {Object} rpc RPC object containing all request params\n     */\n    receiveSameDomain: function(rpc) {\n      // Pass through to local process method but converting to a local Array\n      rpc.a = Array.prototype.slice.call(rpc.a);\n\t  window.setTimeout(function() { process(rpc) }, 0);\n    }\n  };\n}();\n","var gadgets = gadgets || {};\nif(gadgets.json){\n    gadgets.json.parse = function (text) {\n// Parsing happens in three stages. In the first stage, we run the text against\n// regular expressions that look for non-JSON patterns. We are especially\n// concerned with '()' and 'new' because they can cause invocation, and '='\n// because it can cause mutation. But just to be safe, we want to reject all\n// unexpected forms.\n\n// We split the first stage into 4 regexp operations in order to work around\n// crippling inefficiencies in IE's and Safari's regexp engines. First we\n// replace all backslash pairs with '@' (a non-JSON character). Second, we\n// replace all simple value tokens with ']' characters. Third, we delete all\n// open brackets that follow a colon or comma or that begin the text. Finally,\n// we look to see that the remaining characters are only whitespace or ']' or\n// ',' or ':' or '{' or '}'. If that is so, then the text is safe for eval.\n        if(text && text.replace) {\n            if (/^[\\],:{}\\s]*$/.test(text.replace(/\\\\[\"\\\\\\/b-u]/g, '@').\n                    replace(/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g, ']').\n                    replace(/(?:^|:|,)(?:\\s*\\[)+/g, ''))) {\n                return eval('(' + text + ')');\n            }\n        }\n        // If the text is not JSON parseable, then return false.\n\n        return false;\n    };\n}","/**\n * @class Owf7Participant\n * @constructor\n * @namespace ozpIwc\n * @param {Object} config\n * @param {Object} config.iframe The iframe that contains the widget for this participant\n * @param {Object} config.listener The parent OWF7ParticipantListener\n * @param {Object} config.client The InternalParticipant for this widget.\n * @param {String} config.guid The GUID for the widget that this is an instance of.\n * @param {String} config.instanceId The GUID for the widget instance.\n * @param {String} config.url The launch URL for this widget.\n * @param {String} config.rpcId The iframe.id that is used as the ID for RPC.\n * @param {String} [config.launchDataResource=undefined] The intents.api resource that contains the launch data for the widget, or null for no launch data.\n * @param {Boolean} [config.externalInit=false] Set to true if the iframe has been initialized elsewhere, such as when embedded in OWF 7.\n */\nozpIwc.Owf7Participant=function(config) {\n    config = config || {};\n    if(!config.listener) { throw \"Needs to have an OWF7ParticipantListener\";}\n    if(!config.client) {throw \"Needs an IWC Client\";}\n    if(!config.guid) { throw \"Must be assigned a guid for this widget\";}\n    if(!config.instanceId) { throw \"Needs an widget instance id\";}\n    if(!config.url) { throw \"Needs a url for the widget\"; }\n    if(!config.rpcId) { throw \"Needs a rpcId for the widget\"; }\n\n    this.iframe=config.iframe;\n    this.listener=config.listener;\n    this.client=config.client;\n    this.url=config.url;\n    this.instanceId=config.instanceId;\n    this.widgetGuid=config.guid;\n    this.rpcId=config.rpcId;\n\n    // Create an iframe for the widget\n    this.iframe = document.createElement('iframe');\n    this.iframe.id = config.instanceId;\n\n    this.inDrag=false;\n    this.lastMouseMove=Date.now();\n    \n    // Do a lookup on these two at some point\n    this.widgetQuery=\"?lang=en_US&owf=true&themeName=a_default&themeContrast=standard&themeFontSize=12\";\n    \n    this.launchData=null;\n    var self=this;\n    // number of milliseconds to wait before sending another mousemove event\n    this.mouseMoveDelay=250;\n\n    if(config.launchDataResource) {\n        this.client.send({\n            dst: \"intents.api\",\n            resource: config.launchDataResource,\n            action: \"get\"\n        }, function (response, done) {\n            if (response.response === 'ok'\n                && response.entity && response.entity.entity && response.entity.entity.launchData) {\n                self.launchData = response.entity.entity.launchData;\n            } else {\n                self.launchData = undefined;\n            }\n            if(!config.externalInit) {\n                self.initIframe();\n            }\n            done();\n        });\n    } else {\n        if(!config.externalInit) {\n            this.initIframe();\n        }\n    }\n};\n\n/**\n * Creates the iframe for the legacy widget content. Registers drag and drop for the widget.\n *\n * @method initIframe\n */\nozpIwc.Owf7Participant.prototype.initIframe=function() {\n      \n\t// these get turned into the iframes name attribute\n\t// Refer to js/eventing/container.js:272\n\tthis.widgetParams={\n\t\t\"id\": this.instanceId,\n\t\t\"webContextPath\":\"/owf\",\n\t\t\"preferenceLocation\": this.listener.prefsUrl,\n\t\t\"relayUrl\":  this.listener.rpcRelay, \n\t\t\"url\": this.url,\n\t\t\"guid\": this.widgetGuid,\n\t\t// fixed values\n\t\t\"layout\":\"desktop\",\n\t\t\"containerVersion\":\"7.0.1-GA\",\n\t\t\"owf\":true,\n\t\t\"lang\":\"en_US\",\n\t\t\"currentTheme\":{\n\t\t\t\"themeName\":\"a_default\",\n\t\t\t\"themeContrast\":\"standard\",\n\t\t\t\"themeFontSize\":12\n\t\t},\t\t\n\t\t\"version\":1,\n\t\t\"locked\":false,\n        \"data\": this.launchData\n\t};\n\tthis.subscriptions={};\n\tthis.iframe.setAttribute(\"name\",JSON.stringify(this.widgetParams));\n    this.iframe.setAttribute(\"src\",this.widgetParams.url+this.widgetQuery);\n    this.iframe.setAttribute(\"id\",this.rpcId);\n    document.body.appendChild(this.iframe);\n};\n\n/**\n * IWC data.api resource path where all active legacy widget GUIDs are reported.\n * @property listWidgetChannel\n * @type {string}\n */\nozpIwc.Owf7Participant.listWidgetChannel = \"/owf-legacy/kernel/_list_widgets\";\n\n/**\n * Returns the IWC data.api resource path for the given pubsub channel.\n * @method pubsubChannel\n * @param {String} channel\n * @returns {String}\n */\nozpIwc.Owf7Participant.pubsubChannel=function(channel) {\n    return \"/owf-legacy/eventing/\"+channel;\n};\n\n/**\n * Returns the IWC data.api resource path for the given rpc Channel\n * @method rpcChannel\n * @param {String} channel\n * @returns {String}\n */\nozpIwc.Owf7Participant.rpcChannel=function(channel) {\n    return \"/owf-legacy/gadgetsRpc/\"+channel;\n};\n\n/**\n * Handler for the RPC channel \"container_init\". Configures the widgets window.name, rpc relay url, and auth token.\n * Calls RPC channel \"after_container_init\".\n *\n * @method onContainerInit\n * @param sender\n * @param message\n */\nozpIwc.Owf7Participant.prototype.onContainerInit=function(sender,message) {\n    // The container sends params, but the widget JS ignores them\n    if ((window.name === \"undefined\") || (window.name === \"\")) {\n        window.name = \"ContainerWindowName\" + Math.random();\n    }\n    var initMessage = gadgets.json.parse(message);\n    var useMultiPartMessagesForIFPC = initMessage.useMultiPartMessagesForIFPC;\n    var idString = this.rpcId;//null;\n    //if (initMessage.id.charAt(0) !== '{') {\n    //\t\tidString = initMessage.id;\n    //}\n    //else {\n    //\t\tvar obj = gadgets.json.parse(initMessage.id);\n    //\t\tvar id = obj.id;\n    //\t\tidString = gadgets.json.stringify({id:obj.id});\n    //}\n\n    gadgets.rpc.setRelayUrl(idString, initMessage.relayUrl, false, useMultiPartMessagesForIFPC);\n    gadgets.rpc.setAuthToken(idString, 0);\n    var jsonString = '{\\\"id\\\":\\\"' + window.name + '\\\"}';\n\n    this.registerDragAndDrop();\n    this.registerWidgetListing();\n\n    gadgets.rpc.call(idString, 'after_container_init', null, window.name, jsonString);\n};\n\n/**\n * Handler for the RPC channel \"pubsub\" when receiving \"publish\" commands.\n * Forwards the message using the IWC's data.api.\n *\n * @method onPublish\n * @param {String} command\n * @param {String} channel\n * @param {String|Number|Object|Boolean} message\n * @param {String} dest\n */\nozpIwc.Owf7Participant.prototype.onPublish=function(command, channel, message, dest) {\n    if(this[\"hookPublish\"+channel] && !this[\"hookPublish\"+channel].call(this,message)) {\n        return;\n    }\n    this.client.send({\n        \"dst\": \"data.api\",\n        \"resource\": ozpIwc.Owf7Participant.pubsubChannel(channel),\n        \"action\": \"set\",\n        \"entity\": message\n    });\n};\n\n\n/**\n * Handler for the RPC channel \"pubsub\" when receiving \"subscribe\" commands.\n * Subscribes using the IWC's data.api watch capabilities.\n * Replies to the subscriber upon change in data.api resource.\n *\n * @method onSubscribe\n * @param {String} command\n * @param {String} channel\n * @param {String|Number|Object|Boolean} message\n * @param {String} dest\n */\nozpIwc.Owf7Participant.prototype.onSubscribe=function(command, channel, message, dest) {\n    var self=this;\n    this.subscriptions[channel]=true;\n    this.client.send({\n        \"dst\": \"data.api\",\n        \"resource\": ozpIwc.Owf7Participant.pubsubChannel(channel),\n        \"action\": \"watch\"\n    },function(packet,unregister) {\n        if(packet.response !== \"changed\") return;\n\n        if(self[\"hookReceive\"+channel] && !self[\"hookReceive\"+channel].call(self,packet.entity.newValue)) {\n            return;\n        }\n        if(self.subscriptions[channel]) { \n            // from shindig/pubsub_router.js:77    \n            //gadgets.rpc.call(subscriber, 'pubsub', null, channel, sender, message);\n            gadgets.rpc.call(self.rpcId, 'pubsub', null, channel, null, packet.entity.newValue);\n        }else {\n            unregister();\n        }\n    });\n};\n/**\n * Handler for the RPC channel \"pubsub\" when receiving \"unsubscribe\" commands.\n * Unsubscribes from the IWC's data.api updates.\n *\n * @method onUnsubscribe\n * @param {String} command\n * @param {String} channel\n * @param {String|Number|Object|Boolean} message\n * @param {String} dest\n */\nozpIwc.Owf7Participant.prototype.onUnsubscribe=function(command, channel, message, dest) {\n    this.subscriptions[channel]=false;\n};\n\n/**\n * Handler for the RPC channel \"_WIDGET_LAUNCHER_CHANNEL\".\n * Launches legacy widgets using the IWC's system.api launch capabilities.\n *\n * @method onLaunchWidget\n * @param {String} sender\n * @param {String} msg\n * @param {Object} rpc\n */\nozpIwc.Owf7Participant.prototype.onLaunchWidget=function(sender,msg,rpc) {\n    msg=JSON.parse(msg);    \n    // ignore title, titleRegex, and launchOnlyIfClosed\n    this.client.send({\n        dst: \"system.api\",\n        resource: \"/application/\" + msg.guid,\n        action: \"launch\",\n        contentType: \"text/plain\",\n        entity: msg.data\n    },function(reply,unregister) {\n      //gadgets.rpc.call(rpc.f, '__cb', null, rpc.c, {\n      rpc.callback({\n        error: false,\n        newWidgetLaunched: true,\n        uniqueId: \"unknown,not supported yet\"\n      });\n      unregister();\n    });\n};\n\n/**\n * Updates the IWC's data.api resource specified by listWidgetChannel with this widget's GUID.\n * Registers a beforeunload event to remove the GUID on closing.\n *\n * @method registerWidgetListing\n */\nozpIwc.Owf7Participant.prototype.registerWidgetListing = function() {\n    var self = this;\n\n    window.addEventListener(\"beforeunload\",function(){\n        self.unregisterWidgetListing();\n    });\n\n    this.client.send({\n        dst: \"data.api\",\n        resource: ozpIwc.Owf7Participant.listWidgetChannel,\n        action: \"addChild\",\n        contentType: \"text/plain\",\n        entity: gadgets.json.parse(this.rpcId)\n    },function(reply){\n        self.widgetListing = reply.entity.resource;\n    });\n};\n\n/**\n * Updates the IWC's data.api resource specified by listWidgetChannel by removing this widget's GUID.\n *\n * @method unregisterWidgetListing\n */\nozpIwc.Owf7Participant.prototype.unregisterWidgetListing = function() {\n    console.log(this.client.send,ozpIwc.Owf7Participant.listWidgetChannel,this.widgetListing);\n    this.client.send({\n        dst: \"data.api\",\n        resource: ozpIwc.Owf7Participant.listWidgetChannel,\n        action: \"removeChild\",\n        contentType: \"text/plain\",\n        entity: {resource: this.widgetListing}\n    });\n    return true;\n};\n\n/**\n * Gathers a list of current active legacy widget GUIDs from the IWC data.api.\n *\n * @method onListWidgets\n * @param {Object} rpc\n */\nozpIwc.Owf7Participant.prototype.onListWidgets = function(rpc){\n    var self = this;\n    this.client.send({\n        dst: \"data.api\",\n        resource: ozpIwc.Owf7Participant.listWidgetChannel,\n        action: \"list\"\n    },function(reply){\n        var widgets = [];\n        var widgetCount = reply.entity.length || 0;\n        for(var i in reply.entity){\n            self.client.send({\n                dst: \"data.api\",\n                resource: reply.entity[i],\n                action: \"get\"\n            },function(resp){\n                if(resp.entity && resp.entity.id) {\n                    widgets.push(resp.entity);\n                }\n                if (--widgetCount <= 0) {\n                    rpc.callback(widgets);\n                }\n            });\n        }\n\n    });\n};\n\n//=======================================================================\n// Drag and Drop MADNESS\n//=======================================================================\n\n/* All Drag and Drop messages look like:\n * {\n        sender: this.widgetEventingController.getWidgetId(),\n        pageX: e.pageX,\n        pageY: e.pageY,\n        screenX: e.screenX,\n        screenY: e.screenY\n    }\n */\n/**\n * Normalize the drag and drop message coordinates for the widget's content.\n * @method convertToLocalCoordinates\n * @param {Object} msg A drag and drop message.\n * @returns {Object}\n */\nozpIwc.Owf7Participant.prototype.convertToLocalCoordinates=function(msg) {\n    // translate to container coordinates\n    var rv=this.listener.convertToLocalCoordinates(msg);\n\n    // this calculates the position of the iframe relative to the document,\n    // accounting for scrolling, padding, etc.  If we started at zero, this\n    // would be the iframe's coordinates inside the document.  Instead, we started\n    // at the mouse location relative to the adapter, which gives the location\n    // of the event inside the iframe content.\n    // http://www.kirupa.com/html5/get_element_position_using_javascript.htm\n    \n    // should work in most browsers: http://www.quirksmode.org/dom/w3c_cssom.html#elementview\n    // IE < 7: will miscalculate by skipping ancestors that are \"position:relative\"\n    // IE, Opera: not work if there's a \"position:fixed\" in the ancestors\n    var element=this.iframe;\n    while(element) {        \n        rv.pageX += (element.offsetLeft - element.scrollLeft + element.clientLeft);\n        rv.pageY += (element.offsetTop - element.scrollTop + element.clientTop);        \n        element = element.offsetParent;    \n    }\n\n    return rv;\n};\n\n/**\n * Returns true if the location is within the widget's iframe bounds.\n * @method inIframeBounds\n * @param {MouseEvent} location\n * @returns {Boolean}\n */\nozpIwc.Owf7Participant.prototype.inIframeBounds=function(location) {\n    // since we normalized the coordinates, we can just check to see if they are \n    // within the dimensions of the iframe.\n    return location.pageX >= 0 && location.pageX < this.iframe.clientWidth &&\n           location.pageY >= 0 && location.pageY < this.iframe.clientHeight;\n};\n\n/**\n * @method onFakeMouseMoveFromClient\n * @param msg\n */\nozpIwc.Owf7Participant.prototype.onFakeMouseMoveFromClient=function(msg) {\n    // originally translated the pageX/pageY to container coordinates.  With\n    // the adapter, we're translating from screen coordinates so don't need to \n    // do any modification\n//    console.log(\"Fake mouse move:\",msg);\n    var now=Date.now();\n    var deltaT=now-this.lastMouseMove;\n    if(deltaT < this.mouseMoveDelay) {\n        return;\n    }\n//    console.log(\"Sending mouse move\",msg);\n    this.lastMouseMove=now;\n    this.client.send({\n       \"dst\": \"data.api\",\n       \"resource\": ozpIwc.Owf7Participant.rpcChannel(\"_fake_mouse_move\"),\n       \"action\": \"set\",\n       \"entity\": msg\n    });\n    \n};\n\n/**\n * Only sent if the client is a flash widget (dunno why?).  Otherwise, it sends a _dragStopInWidgetName\n * @method onFakeMouseUpFromClient\n * @param {MouseEvent} msg\n */\nozpIwc.Owf7Participant.prototype.onFakeMouseUpFromClient=function(msg) {\n    // originally translated the pageX/pageY to container coordinates.  With\n    // the adapter, we're translating from screen coordinates so don't need to \n    // do any modification\n    this.client.send({\n       \"dst\": \"data.api\",\n       \"resource\": ozpIwc.Owf7Participant.rpcChannel(\"_fake_mouse_up\"),\n       \"action\": \"set\",\n       \"entity\": msg\n    });\n};\n\n/**\n * Receive a fake mouse event from another widget.  Do the conversions and\n * finagling that the container would have done in OWF 7.\n * @method onFakeMouseMoveFromOthers\n * @param {MouseEvent} msg\n */\nozpIwc.Owf7Participant.prototype.onFakeMouseMoveFromOthers=function(msg) {\n    if(!(\"screenX\" in msg && \"screenY\" in msg)) {\n        return;\n    }\n\n    this.lastPosition=msg;\n    if(msg.sender===this.rpcId) {\n        return;\n    }\n    var localizedEvent=this.convertToLocalCoordinates(msg);\n//    console.log(\"Received Fake mouse move at page(\"\n//        +localizedEvent.pageX+\",\"+localizedEvent.pageY+\")\");\n    if(this.inIframeBounds(localizedEvent)) {\n        this.mouseOver=true;\n        gadgets.rpc.call(this.rpcId, '_fire_mouse_move', null,localizedEvent);\n    } else {\n        if(this.mouseOver) {\n//            console.log(\"Faking an mouse dragOut at page(\"\n//                +localizedEvent.pageX+\",\"+localizedEvent.pageY+\")\");\n            // this.eventingContainer.publish(this.dragOutName, null, lastEl.id);\n            // fake the pubsub event directly to the recipient\n            gadgets.rpc.call(this.rpcId, 'pubsub', null, \"_dragOutName\", \"..\", null);\n        }\n        this.mouseOver=false;\n    }\n};\n\n\n/**\n * Receive a fake mouse event from another widget.  Do the conversions and\n * finagling that the container would have done in OWF 7.\n * @method onFakeMouseUpFromOthers\n * @param {MouseEvent} msg\n */\nozpIwc.Owf7Participant.prototype.onFakeMouseUpFromOthers=function(msg) {\n    var localizedEvent=this.convertToLocalCoordinates(msg);\n    if(this.inIframeBounds(localizedEvent)) {\n//        console.log(\"Received Fake mouse up at page(\"\n//            +localizedEvent.pageX+\",\"+localizedEvent.pageY+\")\");    \n        gadgets.rpc.call(this.rpcId, '_fire_mouse_up', null,localizedEvent);\n    } else {\n        // send a mouse up over container message\n        // @see dd/WidgetDragAndDropContainer.js:257\n        \n        // this.eventingContainer.publish(this.dragStopInContainerName, null);\n        // TODO: not sure if the cancel goes here\n//        this.client.send({\n//            \"dst\": \"data.api\",\n//            \"resource\": this.pubsubChannel(\"_dragStopInContainer\"),\n//            \"action\": \"set\",\n//            \"entity\": msg  // ignored, but changes the value to trigger watches\n//        });\n    }\n};\n\n/**\n * Uses the data.api watch capabilities to receive drag and drop events from other legacy widgets.\n * @method registerDragAndDrop\n */\nozpIwc.Owf7Participant.prototype.registerDragAndDrop=function() {\n    var self=this;\n    this.client.send({\n        \"dst\": \"data.api\",\n        \"resource\": ozpIwc.Owf7Participant.rpcChannel(\"_fake_mouse_up\"),\n        \"action\": \"watch\"\n    },function(packet,unregister) {\n        if(packet.response!==\"changed\") return;\n        self.onFakeMouseUpFromOthers(packet.entity.newValue);\n    });\n    this.client.send({\n        \"dst\": \"data.api\",\n        \"resource\": ozpIwc.Owf7Participant.rpcChannel(\"_fake_mouse_move\"),\n        \"action\": \"watch\"\n    },function(packet,unregister) {\n        if(packet.response!==\"changed\") return;\n        self.onFakeMouseMoveFromOthers(packet.entity.newValue);\n    });\n \n};\n\n//==========================\n// Hook the pubsub channels for drag and drop\n//==========================\n\n// No action needed, just let the move as normal for these:\n// _dragStart: publish, receive\n// _dragOverWidget:  publish, receive (not used by client)\n\n \n/**\n * Cancels the publish, since these should originate from the container, not widgets\n * @method hookPublish_dragOutName\n * @returns {Boolean}\n */\nozpIwc.Owf7Participant.prototype.hookPublish_dragOutName=function() {return false;};\n\n/**\n * Cancels the publish, since these should originate from the container, not widgets\n * @method hookPublish_dropReceiveData\n * @returns {Boolean}\n */\nozpIwc.Owf7Participant.prototype.hookPublish_dropReceiveData=function() { return false; };\n\n/**\n * Cancels the receive, since these should not originate from outside the adapter\n * @method hookReceive_dragSendData\n * @returns {Boolean}\n */\nozpIwc.Owf7Participant.prototype.hookReceive_dragSendData=function() { return false;};\n\n/**\n * Cancels the receive, since these should not originate from outside the adapter\n * @method hookReceive_dragOutName\n * @returns {Boolean}\n */\nozpIwc.Owf7Participant.prototype.hookReceive_dragOutName=function() { return false;};\n\n/**\n * Cancels the receive, since these should not originate from outside the adapter\n * @method hookReceive_dropReceiveData\n * @returns {Boolean}\n */\nozpIwc.Owf7Participant.prototype.hookReceive_dropReceiveData=function() { return false; };\n\n\n/**\n * Starts the drag state.\n * @method hookReceive_dragStart\n * @param {Object} message\n * @returns {Boolean}\n */\nozpIwc.Owf7Participant.prototype.hookReceive_dragStart=function(message) {\n//    console.log(\"Starting external drag on \",message);\n    this.inDrag=true;\n    return true; \n};\n\n/**\n * Starts the drag state.\n * @method hookPublish_dragStart\n * @param {Object} message\n * @returns {Boolean}\n */\nozpIwc.Owf7Participant.prototype.hookPublish_dragStart=function(message) {\n//    console.log(\"Starting internal drag on \",message);\n    this.inDrag=true;\n    return true; \n};\n\n/**\n * Stops the drag state.\n * @method hookReceive_dragStopInContainer\n * @returns {Boolean}\n */\nozpIwc.Owf7Participant.prototype.hookReceive_dragStopInContainer=function() {\n//    console.log(\"Stopping drag in container\");\n    this.inDrag=false;\n    return true; \n};\n\n/**\n * Stops the drag state.\n * @method hookReceive_dragStopInWidget\n * @returns {Boolean}\n */\nozpIwc.Owf7Participant.prototype.hookReceive_dragStopInWidget=function() {\n//    console.log(\"Stopping drag in widget\");\n    this.inDrag=false;\n    return true; \n};\n\n/**\n * Stores the drag data in the data.api.\n * @method hookPublish_dragSendData\n * @param {Object} message\n * @returns {Boolean}\n */\nozpIwc.Owf7Participant.prototype.hookPublish_dragSendData=function(message) {\n//    console.log(\"Setting drag data to \",message);\n    this.client.send({\n        \"dst\": \"data.api\",\n        \"resource\": ozpIwc.Owf7Participant.rpcChannel(\"_dragSendData_value\"),\n        \"action\": \"set\",\n        \"entity\": message\n    });\n    return false;\n};\n\n/**\n * Handles drag data if the drag stopped over top of this participant.\n * @method hookPublish_dragStopInWidget\n * @param {Object} message\n * @returns {Boolean} true if stopped in this widget, false if not.\n */\nozpIwc.Owf7Participant.prototype.hookPublish_dragStopInWidget=function(message) {\n    // this always published from the widget that initiated the drag\n    // so we need to figure out who to send it to\n    \n    // make sure the mouse is actually over the widget so that it can't steal\n    // the drag from someone else\n    if(!this.mouseOver) {\n//        console.log(\"dragStopInWidget, but not over myself.  Faking mouse event\",this.lastPosition);\n        this.onFakeMouseUpFromClient(this.lastPosition);\n\n        return false;\n    }\n    // this widget claims the drag, give it the drag data\n    var self=this;\n    this.client.send({\n        \"dst\": \"data.api\",\n        \"resource\": ozpIwc.Owf7Participant.rpcChannel(\"_dragSendData_value\"),\n        \"action\": \"get\"\n    },function(packet,unregister) {\n        unregister();\n\n        if(packet.response===\"ok\") {\n//            console.log(\"Completing drag of data \",packet.entity);\n            gadgets.rpc.call(self.rpcId, 'pubsub', null, \"_dropReceiveData\", \"..\", packet.entity);\n        } else {\n            console.log(\"Unable to fetch drag data\",packet);\n        }\n        // tell everyone else that the container took over the drag\n        // also handles the case where the we couldn't get the dragData for some reason by\n        // canceling the whole drag operation\n        // is this duplicative of the same event in _fake_mouse_up?\n        \n        self.client.send({\n            \"dst\": \"data.api\",\n            \"resource\": ozpIwc.Owf7Participant.pubsubChannel(\"_dragStopInContainer\"),\n            \"action\": \"set\",\n            \"entity\": Date.now()  // ignored, but changes the value to trigger watches\n        });\n    });\n    \n\n    return true;\n};\n","(function() {\n\n    var absolutePath = function(href) {\n        var link = document.createElement(\"a\");\n        link.href = href;\n        return (link.protocol+\"//\"+link.host+link.pathname+link.search+link.hash);\n    };\n\n    /**\n     *\n     * @class Owf7ParticipantListener\n     * @namespace ozpIwc\n     * @param {Object} config\n     * @param {String} config.rpcRelay\n     * @param {String} config.prefsUrl\n     * @param {Number} config.xOffset\n     * @param {Number} config.yOffset\n     * @constructor\n     */\n    ozpIwc.Owf7ParticipantListener=function(config) {\n        config = config || {};\n\n        this.rpcRelay=absolutePath(config.rpcRelay || \"rpc_relay.uncompressed.html\");\n        this.prefsUrl=absolutePath(config.prefsUrl || ozpIwc.owf7PrefsUrl || \"/owf/prefs\");\n        this.participants={};\n        this.widgetReadyMap = {};\n        this.magicFunctionMap = {};\n        this.proxyMap = {};\n\n        this.client=new ozpIwc.InternalParticipant();\n        ozpIwc.defaultRouter.registerParticipant(this.client);\n\n        if ((window.name === \"undefined\") || (window.name === \"\")) {\n            window.name = \"ContainerWindowName\" + Math.random();\n        }\n        this.installDragAndDrop();\n        this.registerDefaults();\n\n        // try to find our position on screen to help with cross-window drag and drop\n        this.xOffset= (typeof config.xOffset !== undefined) ?\n            config.xOffset : window.screenX+window.outerWidth - document.body.clientWidth - 10;\n        this.yOffset= (typeof config.yOffset !== undefined) ?\n            config.yOffset : window.screenY+window.outerHeight - document.body.clientHeight - 30;\n    };\n\n    /**\n     * Generates a guid the way OWF7 does it.\n     * @method makeGuid\n     * @returns {string}\n     */\n    ozpIwc.Owf7ParticipantListener.prototype.makeGuid=function() {\n        // not a real guid, but it's the way OWF 7 does it\n        var S4=function(){\n            return (((1+Math.random())*0x10000)|0).toString(16).substring(1);\n        };\n        return (S4()+S4()+\"-\"+S4()+\"-\"+S4()+\"-\"+S4()+\"-\"+S4()+S4()+S4());\n    };\n\n    /**\n     * Updates the xOffset & yOffset from the given MouseEvent object.\n     * @method updateMouseCoordinates\n     * @param {MouseEvent} e\n     */\n    ozpIwc.Owf7ParticipantListener.prototype.updateMouseCoordinates=function(e) {\n        //console.log(\"Updating coords from(\"+this.xOffset+\",\"+this.yOffset+\")\");\n        this.xOffset=e.screenX-e.clientX;\n        this.yOffset=e.screenY-e.clientY;\n        //console.log(\"     to (\"+this.xOffset+\",\"+this.yOffset+\")\");\n    };\n\n    /**\n     * Normalize the drag and drop message coordinates for the listener's content.\n     * @method convertToLocalCoordinates\n     * @param {Object} msg\n     * @param {Object} element\n     * @returns {Object}\n     */\n    ozpIwc.Owf7ParticipantListener.prototype.convertToLocalCoordinates=function(msg,element) {\n        // copy the message\n        var rv={};\n        for(var k in msg) {\n            rv[k]=msg[k];\n        }\n\n        // start with the location relative to the adapter's top-left\n        rv.pageX=msg.screenX-this.xOffset;\n        rv.pageY=msg.screenY-this.yOffset;\n\n        // this calculates the position of the iframe relative to the document,\n        // accounting for scrolling, padding, etc.  If we started at zero, this\n        // would be the iframe's coordinates inside the document.  Instead, we started\n        // at the mouse location relative to the adapter, which gives the location\n        // of the event inside the iframe content.\n        // http://www.kirupa.com/html5/get_element_position_using_javascript.htm\n\n        // should work in most browsers: http://www.quirksmode.org/dom/w3c_cssom.html#elementview\n        // IE < 7: will miscalculate by skipping ancestors that are \"position:relative\"\n        // IE, Opera: not work if there's a \"position:fixed\" in the ancestors\n        while(element) {\n            rv.pageX += (element.offsetLeft - element.scrollLeft + element.clientLeft);\n            rv.pageY += (element.offsetTop - element.scrollTop + element.clientTop);\n            element = element.offsetParent;\n        }\n\n        return rv;\n    };\n\n    /**\n     * Creates a Owf7Participant for the given widget and registers its widget state channel.\n     * @method addWidget\n     * @param {Object} config\n     * @param {String} [config.instanceId] a guid is assigned if not given.\n     * @param {String} config.url the url of the widget\n     * @param {String} [config.launchDataResource] a resource path of data to be used for the launch of the widget.\n     * @returns {*}\n     */\n    ozpIwc.Owf7ParticipantListener.prototype.addWidget=function(config) {\n        var self = this;\n        var participantConfig = {};\n\n        for(var i in config){\n            participantConfig[i] = config[i];\n        }\n\n        participantConfig.instanceId = config.instanceId || this.makeGuid();\n        participantConfig.listener = self;\n        participantConfig.client = new ozpIwc.InternalParticipant();\n        participantConfig.rpcId = gadgets.json.stringify({id:participantConfig.instanceId});\n\n\n        // Update the hash in case the user refreshes. Then create the participant/register RPC\n        function init(cfg) {\n            var hashObj = {},\n                newHash = \"#\",\n                widgetRegistrations = {};\n\n            if(cfg.guid){\n                hashObj.guid = cfg.guid;\n            }\n            if(cfg.instanceId){\n                hashObj.instanceId= cfg.instanceId;\n            }\n\n            // Serialize the hash and add it to the location.\n            for (var i in hashObj) {\n                newHash += i + \"=\" + hashObj[i] + \"&\";\n            }\n            newHash = newHash.substring(0, newHash.length - 1);\n            window.location.hash = newHash;\n\n            // After storing the hash, if the guid does not exist just set it as instanceId for OWF7 to not complain.\n            cfg.guid = config.guid || cfg.instanceId;\n            cfg.listener.participants[cfg.rpcId] = new ozpIwc.Owf7Participant(cfg);\n\n            // Add the _WIDGET_STATE_CHANNEL_<instanceId> RPC registration for the widget.\n            // @see js\\state\\WidgetStateContainer.js:35\n            widgetRegistrations['_WIDGET_STATE_CHANNEL_' + cfg.instanceId] = function(){};\n            self.registerFunctions(widgetRegistrations,gadgets.rpc.register);\n\n            return cfg.listener.participants[cfg.rpcId];\n        }\n\n        ozpIwc.defaultRouter.registerParticipant(participantConfig.client);\n\n        // If there was a IWC launch resource, go gather it\n        if (config.launchDataResource) {\n            participantConfig.client.send({\n                dst: \"intents.api\",\n                action: \"get\",\n                resource: config.launchDataResource\n            }, function (resp) {\n                // If the widget is refreshed, the launch resource data has been deleted.\n                if (resp && resp.entity && resp.entity.entity && typeof resp.entity.entity.id === \"string\") {\n                    participantConfig.guid = resp.entity.entity.id;\n                }\n                return init(participantConfig);\n            });\n        } else {\n            return init(participantConfig);\n        }\n    };\n\n    /**\n     * Notifies the IWC that a legacy widget has canceled dragging.\n     * @method cancelDrag\n     */\n    ozpIwc.Owf7ParticipantListener.prototype.cancelDrag=function() {\n        this.inDrag=false;\n        this.client.send({\n            \"dst\": \"data.api\",\n            \"resource\": ozpIwc.Owf7Participant.pubsubChannel(\"_dragStopInContainer\"),\n            \"action\": \"set\",\n            \"entity\": Date.now()  // ignored, but changes the value to trigger watches\n        });\n    };\n\n    /**\n     * Adds the capability of drag and drop to the container.\n     * @method installDragAndDrop\n     */\n    ozpIwc.Owf7ParticipantListener.prototype.installDragAndDrop=function() {\n        var self=this;\n        var updateMouse=function(evt) {self.updateMouseCoordinates(evt);};\n\n        document.addEventListener(\"mouseenter\",updateMouse);\n        document.addEventListener(\"mouseout\",updateMouse);\n\n        this.client.send({\n           \"dst\":\"data.api\",\n           \"resource\": ozpIwc.Owf7Participant.pubsubChannel(\"_dragStart\"),\n           \"action\": \"watch\"\n        },function(reply) {\n            if(reply.response === \"changed\") {\n                self.inDrag=true;\n            }\n        });\n        this.client.send({\n            \"dst\": \"data.api\",\n            \"resource\": ozpIwc.Owf7Participant.pubsubChannel(\"_dragStopInContainer\"),\n            \"action\": \"watch\"\n        },function(reply) {\n            if(reply.response === \"changed\") {\n                self.inDrag=false;\n            }\n        });\n\n        document.addEventListener(\"mousemove\",function(e) {\n            self.updateMouseCoordinates(e);\n    //        console.log(\"Adapter mousemove at \",e);\n            if(self.inDrag && (e.buttons&1) !== 1) {\n                console.log(\"Canceling drag\");\n                self.cancelDrag();\n            }\n        },false);\n    //    document.addEventListener(\"mouseup\",function(e) {\n    ////        if(self.inDrag) {\n    ////            return;\n    ////        }\n    //        self.onFakeMouseUpFromClient({\n    //            sender: self.rpcId,\n    //            pageX: e.pageX,\n    //            pageY: e.pageY,\n    //            screenX: e.screenX,\n    //            screenY: e.screenY\n    //        });\n    //    },false);\n    };\n\n    /**\n     * Default rpc registration for the OWF7ParticipantListener. Registers the default rpc handler, and all rpc\n     * functions gathered from OWF7ParticipantListener.prototype.getRPCFuncs(). If custom registrations are\n     * desired, see registerFunctions.\n     * @method registerDefaults\n     */\n    ozpIwc.Owf7ParticipantListener.prototype.registerDefaults = function(){\n\n        var rpcString=function(rpc) {\n            return \"[service:\" + rpc.s + \",from:\" + rpc.f + \"]:\" + JSON.stringify(rpc.a);\n        };\n\n        gadgets.rpc.registerDefault(function() {\n            console.log(\"Unknown rpc \" + rpcString(this));\n        });\n        this.registerFunctions(this.getRPCFunctions(),gadgets.rpc.register);\n    };\n\n    /**\n     * Returns the participant if it registered to the listener, throws an exception if it does not.\n     * @method getParticipant\n     * @param id\n     * @returns {Object}\n     */\n    ozpIwc.Owf7ParticipantListener.prototype.getParticipant = function(id){\n        var p=this.participants[id];\n        if(!p) {\n            throw this.getParticipant_err;\n        }\n        return p;\n    };\n\n    /**\n     * The error message passed when a desired participant does not exist in the listener.\n     * @property getParticipant_err\n     * @type {string}\n     */\n    ozpIwc.Owf7ParticipantListener.prototype.getParticipant_err = \"Uknown participant\";\n\n    /**\n     * Registers any function nested in the regObj param using the regFn param.\n     * @method registerFunctions\n     * @params  {Object|Array} regObj A object of functions to register where the key is the name, Or nested objects/arrays\n     *                               matching said structure.\n     * @params  {Function} regFn A registration function to pass (name,fn) to.\n     */\n    ozpIwc.Owf7ParticipantListener.prototype.registerFunctions = function(regObj,regFn){\n\n        // Recursively cycle through the object/array.\n        // If property is a function pass it to fn.\n        function recurseIfObject(obj,fn){\n            for(var i in obj){\n                if(obj.hasOwnProperty(i)){\n                    if(typeof obj[i] === 'function'){\n                        fn(i,obj[i]);\n                    } else if(typeof obj[i] === 'object') {\n                        recurseIfObject(obj[i],fn);\n                    } else {\n                        console.error('typeof('+i+')=', typeof(obj[i]), '. Only functions allowed.');\n                    }\n                }\n            }\n        }\n\n        recurseIfObject(regObj,regFn);\n    };\n\n    /**\n     * Using scope isolation, these RPC functions have access to limited properties of the OWF7ParticipantListener.\n     * @method getRPCFunctions\n     * @returns {Object}\n     */\n    ozpIwc.Owf7ParticipantListener.prototype.getRPCFunctions = function(){\n        // Use closure for any members as we are generating handlers.\n        var widgetReadyMap = this.widgetReadyMap,\n            magicFunctionMap = this.magicFunctionMap,\n            proxyMap = this.proxyMap,\n            self = this;\n\n        return {\n            /**\n             * Components\n             */\n            'components': {\n                'keys': {\n                    /**\n                     *\n                     * @see reference/js/components/keys/KeyEventing.js\n                     */\n                    '_widget_iframe_ready': function () {\n                    }\n                },\n                'widget': {\n                    /**\n                     * @see js\\components\\widget\\WidgetIframeComponent.js:15\n                     * @param sender\n                     * @param msg\n                     */\n                    '_WIDGET_LAUNCHER_CHANNEL': function (sender, msg) {\n                        var p = self.getParticipant(this.f);\n                        p.onLaunchWidget(sender, msg, this);\n                    }\n                }\n\n            },\n\n            /**\n             * Drag and Drop\n             */\n            'dd': {\n                /**\n                 *\n                 * _fake_mouse_move is needed for drag and drop.  The container code is at\n                 * @see reference\\js\\dd\\WidgetDragAndDropContainer.js:52\n                 * @param msg\n                 */\n                '_fake_mouse_move': function (msg) {\n                    self.getParticipant(this.f).onFakeMouseMoveFromClient(msg);\n                },\n                /**\n                 * @see reference\\js\\dd\\WidgetDragAndDropContainer.js:52\n                 * @param msg\n                 */\n                '_fake_mouse_up': function (msg) {\n                    self.getParticipant(this.f).onFakeMouseUpFromClient(msg);\n                },\n                /**\n                 *\n                 */\n                '_fake_mouse_out': function () { /*ignored*/\n                }\n            },\n\n            /**\n             * Eventing\n             */\n            'eventing': {\n                /**\n                 * Called by the widget to connect to the container\n                 * @see js/eventing/Container.js:26 for the containerInit function that much of this is copied from\n                 * @see js/eventing/Container.js:104 for the actual rpc.register\n                 * @property container_init\n                 */\n                'container_init': function (sender, message) {\n                    self.getParticipant(this.f).onContainerInit(sender, message);\n                },\n                /**\n                 *\n                 */\n                'after_container_init': function() {\n\n                },\n                /**\n                 * @param {string} command - publish | subscribe | unsubscribe\n                 * @param {string} channel - the OWF7 channel\n                 * @param {string} message - the message being published\n                 * @param {string} dest - the ID of the recipient if this is point-to-point\n                 * @see js/eventing/Container.js:376\n                 * @see js-lib/shindig/pubsub.js\n                 * @see js-lib/shindig/pubsub_router.js\n                 */\n                'pubsub': function (command, channel, message, dest) {\n                    var p = self.getParticipant(this.f);\n                    switch (command) {\n                        case 'publish':\n                            p.onPublish(command, channel, message, dest);\n                            break;\n                        case 'subscribe':\n                            p.onSubscribe(command, channel, message, dest);\n                            break;\n                        case 'unsubscribe':\n                            p.onUnsubscribe(command, channel, message, dest);\n                            break;\n                    }\n                }\n            },\n\n            /**\n             * Intents\n             */\n            'intents': {\n                /**\n                 * used for both handling and invoking intents\n                 * @see js/intents/WidgetIntentsContainer.js:32 for reference\n                 * @param senderId\n                 * @param intent\n                 * @param data\n                 * @param destIds\n                 */\n                '_intents': function(senderId, intent, data, destIds){\n\n                },\n                /**\n                 * used by widgets to register an intent\n                 * @see js/intents/WidgetIntentsContainer.js:85 for reference\n                 * @param intent\n                 * @param destWidgetId\n                 */\n                '_intents_receive': function(intent, destWidgetId){\n\n                }\n            },\n\n            /**\n             * Kernel\n             */\n            'kernel': {\n                /**\n                 * @see js/kernel/kernel-rpc-base.js:147\n                 * @param widgetId\n                 * @param srcWidgetId\n                 * @returns {boolean}\n                 */\n                '_getWidgetReady': function (widgetId, srcWidgetId) {\n                    return widgetReadyMap[widgetId] = true;\n\n                },\n                /**\n                 * @see reference/js/kernel/kernel-rpc-base.js:130\n                 * @param widgetId\n                 */\n                '_widgetReady': function(widgetId){\n\n                },\n                /**\n                 * @see js/kernel/kernel-rpc-base.js:124\n                 * @param iframeId\n                 * @param functions\n                 */\n                'register_functions': function (iframeId, functions) {\n                    var widgetID = JSON.parse(iframeId).id;\n\n                    if (!magicFunctionMap[widgetID]) {\n                        magicFunctionMap[widgetID] = functions;\n                        return;\n                    }\n\n                    // don't add duplicates\n                    var found;\n\n                    for (var i = 0, len = functions.length; i < len; i++) {\n                        found = false;\n                        for (var j = 0, len2 = magicFunctionMap[widgetID].length; j < len2; j++) {\n                            if (functions[i] === magicFunctionMap[widgetID][j]) {\n                                found = true;\n                                break;\n                            }\n                        }\n                        if (found === false) {\n                            magicFunctionMap[widgetID].push(functions[i]);\n                        }\n                    }\n                },\n                /**\n                 * @see js/kernel/kernel-rpc-base.js:88\n                 * @param widgetID\n                 * @param sourceWidgetId\n                 * @returns {*}\n                 */\n                'GET_FUNCTIONS': function (widgetID, sourceWidgetId) {\n                    var functions = magicFunctionMap[widgetID];\n\n                    //save the fact that the sourceWidgetId has a proxy of the widgetId\n                    if (proxyMap[widgetID] == null) {\n                        proxyMap[widgetID] = [];\n                    }\n                    if (sourceWidgetId != null) {\n                        proxyMap[widgetID].push(sourceWidgetId);\n                    }\n\n                    return functions != null ? functions : [];\n                },\n                /**\n                 * @see js/kernel/kernel-container.js:204\n                 * @returns {Array}\n                 */\n                'LIST_WIDGETS': function () {\n                    self.getParticipant(this.f).onListWidgets(this);\n                }\n            },\n\n            /**\n             *  Launcher API\n             *  The handling of the rpc event is in WidgetLauncherContainer\n             *  @see js/launcher/WidgetLauncherContainer.js:22, 36\n             *  msg: {\n             *    universalName: 'universal name of widget to launch',  //universalName or guid maybe identify the widget to be launched\n             *    guid: 'guid of widget to launch',\n             *    title: 'title to replace the widgets title' the title will only be changed if the widget is opened.\n             *    titleRegex: optional regex used to replace the previous title with the new value of title\n             *    launchOnlyIfClosed: true, //if true will only launch the widget if it is not already opened.\n             *                              //if it is opened then the widget will be restored\n             *    data: dataString  //initial launch config data to be passed to a widget only if the widget is opened.  this must be a string\n             *  });\n             *  The steps to launch a widget are defined in dashboard.launchWidgetInstance\n             *  @see js/components/dashboard/Dashboard.js:427\n             *  The \"iframe properties\" come from Dashboard.onBeforeWidgetLaunch\n             *  @see js/components/dashboard/Dashboard.js:318\n             *  @see js\\eventing\\Container.js:237 for getIframeProperties()\n             *  WidgetIframeComponent actually creates the iframe tag.\n             */\n            'launcher': {},\n\n            /**\n             * Util\n             */\n            'util': {\n                'Ozone.log': function() {\n\n                }\n            }\n        };\n    };\n})();"]}